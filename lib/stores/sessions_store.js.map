{"version":3,"sources":["../../src/stores/sessions_store.js"],"names":["EventEmitter","_","AjaxManager","DateManager","Breaker","SessionsDispatcher","ajaxManager","processor","sessions","facility","fetched","processData","groupBy","d","date","reset","resetDates","groups","forEach","values","ses","addDate","processDates","dates","isEmpty","yesterday","Date","setDate","getDate","filter","getTime","currentDate","current","isDate","store","emitChange","event","emit","addChangeListener","callback","on","removeChangeListener","removeListener","_addSessions","data","isFunction","_calendarChange","_setDate","_fetchData","Error","addQuery","request","fetch","then","getAllDates","_fetchRest","_fetchNowNext","nosessions","reduce","prev","curr","_getCurrentDate","_getDate","current_day","findDate","_getFacility","_getMoreDays","getMoreDays","_getPreviousDays","getPreviousDays","_getAllDates","isUndefined","_setApi","api","_setFacility","id","_setGroups","isString","_progress","prog","progress","SessionStore","Object","assign","prototype","setMaxListeners","registeredCallback","payload","action","type","url","dispatchToken","register"],"mappings":"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","file":"sessions_store.js","sourcesContent":["\nimport {EventEmitter} from 'events';\nimport _ from 'lodash/core';\n\n// Internal Modules\nimport AjaxManager from '../utils/ajax_manager';\nimport DateManager from '../factories/date_manager';\nimport Breaker from '../utils/sessions_breaker';\n\n// Flux\nimport SessionsDispatcher from '../dispatchers/sessions_dispatcher';\n\nlet ajaxManager, processor, sessions, facility;\n\nlet fetched     = false;\n\nfunction processData(groupBy){\n  let sessions = DateManager(groupBy);\n\n  return function(d, date, reset = false){\n    if (reset) sessions.resetDates();\n\n    let groups = Breaker(d, groupBy, date);\n    _.forEach(_.values(groups), (ses)=>{\n      sessions.addDate(ses.date, ses.sessions);\n    });\n\n    return sessions;\n  };\n}\n\nfunction processDates(dates){\n  if (_.isEmpty(dates)) return dates;\n  let yesterday = new Date();\n  yesterday.setDate(yesterday.getDate() - 1);\n  return _.filter(dates, (d)=>{\n    return d.date.getTime() >= yesterday.getTime();\n  });\n}\n\nfunction currentDate(date){\n  let current = (_.isDate(date)) ? date : new Date();\n\n  return {\n    getDate: ()=>current\n    , setDate: (d)=>{\n      current = (_.isDate(d)) ? d : current;\n    }\n  };\n}\n\nconst store = {\n  // <<<<<<<<<<<<<<<< Event management >>>>>>>>>>\n  emitChange(event){\n    this.emit(event);\n  }\n\n  , addChangeListener(event, callback){\n    this.on(event, callback);\n  }\n\n  , removeChangeListener(event, callback){\n    this.removeListener(event, callback);\n  }\n\n  // <<<<<<<<<<<<<<< Fetching and processing session >>>>>>>>>>>>\n  , _addSessions(data){\n    if (_.isFunction(processor)){\n      sessions = processor(data);\n    }\n  }\n\n  , _calendarChange(date){\n    this._setDate(date);\n    this._fetchData(date, true);\n  }\n\n  , _fetchData(date, reset = false){\n    if (!ajaxManager){\n      throw new Error('please set API path');\n    }\n\n    ajaxManager.addQuery(date);\n    let request = ajaxManager.fetch();\n\n    if (request){\n      return request.then((data)=>{\n        fetched = true;\n        sessions = processor(data, date, reset);\n\n        this.emitChange('fetched');\n\n        return sessions.getAllDates();\n      })\n      .then((data)=>{\n        this._fetchRest(data);\n        return data;\n      });\n    }\n  }\n\n  , _fetchNowNext(){\n    ajaxManager.fetch().then((data)=>{\n      fetched = true;\n      sessions = processor(data, false);\n\n      this.emitChange('fetched');\n    });\n  }\n\n  , _fetchRest(dates){\n    let fetch = _.filter(dates, (d)=>d.nosessions);\n    fetch = _.reduce(fetch, (prev, curr)=>{\n      if (prev.date.getTime() > curr.date.getTime()){\n        return curr;\n      }\n\n      return prev;\n    });\n\n    if (fetch) this._fetchData(fetch.date);\n  }\n\n  , _getCurrentDate(){\n    return this.current.getDate();\n  }\n\n  , _getDate(date){\n    if (!this.current){\n      this.current = currentDate(date);\n    }\n    this.current.setDate(date);\n    if (sessions){\n      let current_day = sessions.findDate(this.current.getDate());\n      if (current_day) return current_day;\n    }\n\n    if (fetched){\n      this._fetchData(this.current.getDate());\n      this.emitChange('fetching');\n    } else {\n      return [];\n    }\n\n    return null;\n  }\n\n  , _getFacility(){\n    return sessions.findDate(new Date()).data.filter('facility', facility);\n  }\n\n  , _getMoreDays(){\n    if (fetched){\n      let date = sessions.getMoreDays();\n      if (_.isDate(date)) this._fetchData(date);\n    }\n  }\n\n  , _getPreviousDays(date){\n    let d = sessions.getPreviousDays(date);\n    if (_.isDate(d)){\n      this._fetchData(d);\n    }\n  }\n\n  , _getAllDates(){\n    if (_.isUndefined(sessions)) return [new Date()];\n    return processDates(sessions.getAllDates());\n  }\n\n  , _setApi(api){\n    ajaxManager = AjaxManager(api);\n  }\n\n  , _setDate(date){\n    if (!this.current){\n      this.current = currentDate(date);\n    }\n    this.current.setDate(date);\n  }\n\n  , _setFacility(id){\n    facility = id;\n  }\n\n  , _setGroups(groupBy){\n    if (!_.isString(groupBy)) return;\n    processor = processData(groupBy);\n  }\n\n  , _progress(prog){\n    if (!_.isFunction(prog)) return;\n    this.progress = prog;\n  }\n};\n\nconst SessionStore = Object.assign({}, EventEmitter.prototype, store);\nSessionStore.setMaxListeners(0);\n\nconst registeredCallback = function(payload){\n  var action = payload.action;\n  switch(action.type){\n    case 'CHANGE_DATE':\n      SessionStore._setDate(action.date);\n      SessionStore.emitChange('changing_date');\n      break;\n    case 'CALENDAR_CHANGE':\n      SessionStore._calendarChange(action.date);\n      SessionStore.emitChange('calendar_changing');\n      break;\n    case 'FETCH_DATA':\n      if (action.progress) SessionStore._progress(action.progress);\n      SessionStore._fetchData(action.date);\n      SessionStore.emitChange('fetching');\n      break;\n\n    case 'FETCH_NOWNEXT':\n      if (action.progress) SessionStore._progress(action.progress);\n      SessionStore._fetchNowNext();\n      SessionStore.emitChange('fetching_nownext');\n      break;\n\n    case 'MORE_DAYS':\n      SessionStore._getMoreDays();\n      SessionStore.emitChange('more_days');\n      break;\n\n    case 'PREVIOUS_DAYS':\n      SessionStore._getPreviousDays(action.date);\n      SessionStore.emitChange('previous_days');\n      break;\n\n    case 'PRERENDER_DATA':\n      SessionStore._addSessions(action.data);\n      SessionStore.emitChange('prerender');\n      break;\n\n    case 'SET_FACILITY':\n      SessionStore._setFacility(action.id);\n      SessionStore.emitChange('set_facility');\n      break;\n\n    case 'SET_GROUPBY':\n      SessionStore._setGroups(action.groupBy);\n      SessionStore.emitChange('groupby');\n      break;\n    case 'SET_API':\n      SessionStore._setApi(action.url);\n      SessionStore.emitChange('api_set');\n\n      break;\n    default:\n      throw (new Error('No Action'));\n  }\n};\n\nSessionStore.dispatchToken = SessionsDispatcher.register(registeredCallback);\nSessionStore.setMaxListeners(0);\n\nexport default SessionStore;\n"]}