{"version":3,"sources":["../../src/stores/sessions_store.js"],"names":["processData","groupBy","sessions","d","date","reset","resetDates","groups","forEach","values","ses","addDate","processDates","dates","isEmpty","yesterday","Date","setDate","getDate","filter","getTime","currentDate","current","isDate","ajaxManager","processor","facility","fetched","SessionStore","Object","assign","prototype","emitChange","event","emit","addChangeListener","callback","on","removeChangeListener","removeListener","_addSessions","data","isFunction","_calendarChange","_setDate","_fetchData","Error","addQuery","request","fetch","then","getAllDates","_fetchRest","_fetchNowNext","nosessions","reduce","prev","curr","_getCurrentDate","_getDate","current_day","findDate","_getFacility","_getMoreDays","getMoreDays","_getPreviousDays","getPreviousDays","_getAllDates","isUndefined","_setApi","api","_setFacility","id","_setGroups","isString","_progress","prog","progress","setMaxListeners","dispatchToken","register","registeredCallback","payload","action","type","url"],"mappings":"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","file":"sessions_store.js","sourcesContent":["// let AjaxManager, Breaker, DateManager, EventEmitter, SessionsDispatcher, _;\n\nlet ajaxManager, processor, sessions, facility;\n\nimport {EventEmitter} from 'events';\nimport _ from 'lodash';\n\n// Internal Modules\nimport AjaxManager from '../utils/ajax_manager';\nimport DateManager from '../factories/date_manager';\nimport Breaker from '../utils/sessions_breaker';\n\n// Flux\nimport SessionsDispatcher from '../dispatchers/sessions_dispatcher';\n\nlet fetched     = false;\n\nfunction processData(groupBy){\n  let sessions = DateManager(groupBy);\n\n  return function(d, date, reset = false){\n    if (reset) sessions.resetDates();\n\n    let groups = Breaker(d, groupBy, date);\n    _.forEach(_.values(groups), (ses)=>{\n      sessions.addDate(ses.date, ses.sessions);\n    });\n\n    return sessions;\n  };\n}\n\nfunction processDates(dates){\n  if (_.isEmpty(dates)) return dates;\n  let yesterday = new Date();\n  yesterday.setDate(yesterday.getDate() - 1);\n  return _.filter(dates, (d)=>{\n    return d.date.getTime() >= yesterday.getTime();\n  });\n}\n\nfunction currentDate(date){\n  let current = (_.isDate(date)) ? date : new Date();\n\n  return {\n    getDate: ()=>current\n    , setDate: (d)=>{\n      current = (_.isDate(d)) ? d : current;\n    }\n  };\n}\n\nconst store = {\n  // <<<<<<<<<<<<<<<< Event management >>>>>>>>>>\n  emitChange(event){\n    this.emit(event);\n  }\n\n  , addChangeListener(event, callback){\n    this.on(event, callback);\n  }\n\n  , removeChangeListener(event, callback){\n    this.removeListener(event, callback);\n  }\n\n  // <<<<<<<<<<<<<<< Fetching and processing session >>>>>>>>>>>>\n  , _addSessions(data){\n    if (_.isFunction(processor)){\n      sessions = processor(data);\n    }\n  }\n\n  , _calendarChange(date){\n    this._setDate(date);\n    this._fetchData(date, true);\n  }\n\n  , _fetchData(date, reset = false){\n    if (!ajaxManager){\n      throw new Error('please set API path');\n    }\n\n    ajaxManager.addQuery(date);\n    let request = ajaxManager.fetch();\n\n    if (request){\n      return request.then((data)=>{\n        fetched = true;\n        sessions = processor(data, date, reset);\n\n        this.emitChange('fetched');\n\n        return sessions.getAllDates();\n      })\n      .then((data)=>{\n        this._fetchRest(data);\n        return data;\n      });\n    }\n  }\n\n  , _fetchNowNext(){\n    ajaxManager.fetch().then((data)=>{\n      fetched = true;\n      sessions = processor(data, false);\n\n      this.emitChange('fetched');\n    });\n  }\n\n  , _fetchRest(dates){\n    let fetch = _.filter(dates, (d)=>d.nosessions);\n    fetch = _.reduce(fetch, (prev, curr)=>{\n      if (prev.date.getTime() > curr.date.getTime()){\n        return curr;\n      }\n\n      return prev;\n    });\n\n    if (fetch) this._fetchData(fetch.date);\n  }\n\n  , _getCurrentDate(){\n    return this.current.getDate();\n  }\n\n  , _getDate(date){\n    if (!this.current){\n      this.current = currentDate(date);\n    }\n    this.current.setDate(date);\n    if (sessions){\n      let current_day = sessions.findDate(this.current.getDate());\n      if (current_day) return current_day;\n    }\n\n    if (fetched){\n      this._fetchData(this.current.getDate());\n      this.emitChange('fetching');\n    } else {\n      return [];\n    }\n\n    return null;\n  }\n\n  , _getFacility(){\n    return sessions.findDate(new Date()).data.filter('facility', facility);\n  }\n\n  , _getMoreDays(){\n    if (fetched){\n      let date = sessions.getMoreDays();\n      if (_.isDate(date)) this._fetchData(date);\n    }\n  }\n\n  , _getPreviousDays(date){\n    let d = sessions.getPreviousDays(date);\n    if (_.isDate(d)){\n      this._fetchData(d);\n    }\n  }\n\n  , _getAllDates(){\n    if (_.isUndefined(sessions)) return [new Date()];\n    return processDates(sessions.getAllDates());\n  }\n\n  , _setApi(api){\n    ajaxManager = AjaxManager(api);\n  }\n\n  , _setDate(date){\n    if (!this.current){\n      this.current = currentDate(date);\n    }\n    this.current.setDate(date);\n  }\n\n  , _setFacility(id){\n    facility = id;\n  }\n\n  , _setGroups(groupBy){\n    if (!_.isString(groupBy)) return;\n    processor = processData(groupBy);\n  }\n\n  , _progress(prog){\n    if (!_.isFunction(prog)) return;\n    this.progress = prog;\n  }\n};\n\nconst SessionStore = Object.assign({}, EventEmitter.prototype, store);\nSessionStore.setMaxListeners(0);\n\nconst registeredCallback = function(payload){\n  let action = payload.action;\n  switch (action.type){\n    case 'CHANGE_DATE':\n      SessionStore._setDate(action.date);\n      SessionStore.emitChange('changing_date');\n      break;\n    case 'CALENDAR_CHANGE':\n      SessionStore._calendarChange(action.date);\n      SessionStore.emitChange('calendar_changing');\n      break;\n    case 'FETCH_DATA':\n      if (action.progress) SessionStore._progress(action.progress);\n      SessionStore._fetchData(action.date);\n      SessionStore.emitChange('fetching');\n      break;\n\n    case 'FETCH_NOWNEXT':\n      if (action.progress) SessionStore._progress(action.progress);\n      SessionStore._fetchNowNext();\n      SessionStore.emitChange('fetching_nownext');\n      break;\n\n    case 'MORE_DAYS':\n      SessionStore._getMoreDays();\n      SessionStore.emitChange('more_days');\n      break;\n\n    case 'PREVIOUS_DAYS':\n      SessionStore._getPreviousDays(action.date);\n      SessionStore.emitChange('previous_days');\n      break;\n\n    case 'PRERENDER_DATA':\n      SessionStore._addSessions(action.data);\n      SessionStore.emitChange('prerender');\n      break;\n\n    case 'SET_FACILITY':\n      SessionStore._setFacility(action.id);\n      SessionStore.emitChange('set_facility');\n      break;\n\n    case 'SET_GROUPBY':\n      SessionStore._setGroups(action.groupBy);\n      SessionStore.emitChange('groupby');\n      break;\n    case 'SET_API':\n      SessionStore._setApi(action.url);\n      SessionStore.emitChange('api_set');\n\n      break;\n    default:\n      throw (new Error('No Action'));\n  }\n};\n\nSessionStore.dispatchToken = SessionsDispatcher.register(registeredCallback);\nSessionStore.setMaxListeners(0);\n\nexport default SessionStore;\n"]}