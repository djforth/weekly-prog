{"version":3,"sources":["../../src/stores/columns_store.js"],"names":["FilterMap","filter","map","array","newArray","store","device","columns","columns_ids","visible_columns","emitChange","event","emit","addChangeListener","callback","on","removeChangeListener","removeListener","addColumns","c","id","uniqueId","cols","setTitles","push","visible","setVisibleColumns","changeDevice","d","col","getDevice","getColumn","items","find","first","getDateColumns","column","filterCols","type","reduceObj","getHeadline","headline","getKeys","getKeyAndTitle","key","title","getLabeled","label","getNonLabeled","isBoolean","getSearchable","searchables","searchable","getShowable","showables","show","getSortable","sortables","chain","sortable","value","getTitles","getTitleForKey","item","getVisible","obj","values","reduce","newObj","v","removeCols","removeItems","reject","has","capitalize","bind","Object","assign","ColumnsStore","prototype","dispatchToken","register","registeredCallback","payload","action","setMaxListeners"],"mappings":"o7BAMMA,UAAY,SAACC,MAAD,CAASC,GAAT,QAAe,UAACC,KAAD,CAAS,CACxC,GAAIC,UAAWD,MAAMF,MAAN,CAAaA,MAAb,CAAf,CACA,MAAOG,UAASF,GAAT,CAAaA,GAAb,CACR,CAHiB,C,CAKZG,MAAQ,CACZC,OAAQ,SADI,CAEVC,UAFU,CAGVC,cAHU,CAIVC,kBAJU,CAMVC,UANU,UAMCC,KAND,CAMO,CACjB,KAAKC,IAAL,CAAUD,KAAV,CACD,CARW,CAUVE,iBAVU,UAUQF,KAVR,CAUeG,QAVf,CAUwB,CAClC,KAAKC,EAAL,CAAQJ,KAAR,CAAeG,QAAf,CACD,CAZW,CAcVE,oBAdU,UAcWL,KAdX,CAckBG,QAdlB,CAc2B,CACrC,KAAKG,cAAL,CAAoBN,KAApB,CAA2BG,QAA3B,CACD,CAhBW,CAkBVI,UAlBU,UAkBCC,CAlBD,CAkBIC,EAlBJ,CAkBO,CACjBA,GAAOA,IAAM,iBAAEC,QAAF,EADI,CAEjB,GAAIC,MAAO,KAAKC,SAAL,CAAeJ,CAAf,CAAX,CAMA,MALA,MAAKZ,OAAL,CAAaiB,IAAb,CAAkB,CAChBJ,GAAIA,EADY,CAEdE,KAAMA,IAFQ,CAGdG,QAAS,KAAKC,iBAAL,CAAuBJ,IAAvB,CAHK,CAAlB,CAKA,CAAOF,EACR,CA3BW,CA6BVO,YA7BU,UA6BGC,CA7BH,CA6BK,gBACf,KAAKtB,MAAL,CAAesB,CAAD,CAAMA,CAAN,CAAU,KAAKtB,MADd,CAEf,KAAKC,OAAL,CAAe,iBAAEL,GAAF,CAAM,KAAKK,OAAX,CAAoB,SAACsB,GAAD,CAAO,CAExC,MADAA,KAAIJ,OAAJ,CAAc,MAAKC,iBAAL,CAAuBG,IAAIP,IAA3B,CACd,CAAOO,GACR,CAHc,CAIhB,CAnCW,CAqCVC,SArCU,WAqCC,CACX,MAAO,MAAKxB,MACb,CAvCW,CAyCVyB,SAzCU,UAyCAX,EAzCA,CAyCG,CACb,GAAIY,MAAJ,CADa,MAGXA,MAHW,CAETZ,EAFS,CAGF,iBAAEa,IAAF,CAAO,KAAK1B,OAAZ,CAAqB,SAACsB,GAAD,CAAO,CACnC,MAAOA,KAAIT,EAAJ,GAAWA,EACnB,CAFQ,CAHE,CAOH,iBAAEc,KAAF,CAAQ,KAAK3B,OAAb,CAPG,CAUTyB,KAVS,CAWJA,KAXI,CAcN,CAACV,OAAD,CAAWG,UAAX,CACR,CAxDW,CA0DVU,cA1DU,UA0DKf,EA1DL,CA0DQ,iBACdgB,OAAS,KAAKL,SAAL,CAAeX,EAAf,EAAmBE,IADd,CAEZe,WAAarC,UACjB,SAAC6B,GAAD,QAAqB,MAAb,OAAIS,IAAJ,EAAoC,UAAb,OAAIA,IAAnC,CADiB,CAEf,SAACT,GAAD,QAAO,QAAKU,SAAL,CAAeV,GAAf,8BAAP,CAFe,CAFD,CAOlB,MAAOQ,YAAWD,MAAX,CACR,CAlEW,CAoEVI,WApEU,UAoEEpB,EApEF,CAoEK,CACf,MAAO,kBAAEa,IAAF,CAAO,KAAKF,SAAL,CAAeX,EAAf,EAAmBK,OAA1B,CAAmC,SAACI,GAAD,CAAO,CAC/C,MAAOA,KAAIY,QACZ,CAFM,CAGR,CAxEW,CA0EVC,OA1EU,UA0EFtB,EA1EE,CA0EC,CACX,GAAIK,SAAU,KAAKM,SAAL,CAAeX,EAAf,EAAmBK,OAAjC,CACA,MAAO,kBAAEvB,GAAF,CAAMuB,OAAN,CAAe,KAAf,CACR,CA7EW,CA+EVkB,cA/EU,UA+EKvB,EA/EL,CA+EQ,CAClB,GAAIK,SAAU,KAAKM,SAAL,CAAeX,EAAf,EAAmBK,OAAjC,CACA,MAAOA,SAAQvB,GAAR,CAAY,kBAAE0C,IAAF,MAAEA,GAAF,CAAOC,KAAP,MAAOA,KAAP,OAAuB,CAACD,OAAD,CAAMC,WAAN,CAAvB,CAAZ,CACR,CAlFW,CAoFVC,UApFU,UAoFC1B,EApFD,CAoFI,CACd,MAAO,kBAAEnB,MAAF,CAAS,KAAK8B,SAAL,CAAeX,EAAf,EAAmBK,OAA5B,CAAqC,SAACI,GAAD,CAAO,CACjD,MAAOA,KAAIkB,KACZ,CAFM,CAGR,CAxFW,CA0FVC,aA1FU,UA0FI5B,EA1FJ,CA0FO,CACjB,MAAO,kBAAEnB,MAAF,CAAS,KAAK8B,SAAL,CAAeX,EAAf,EAAmBK,OAA5B,CAAqC,SAACI,GAAD,CAAO,CACjD,MAAO,kBAAEoB,SAAF,CAAYpB,IAAIkB,KAAhB,GAA0B,CAAClB,IAAIkB,KACvC,CAFM,CAGR,CA9FW,CAgGVG,aAhGU,UAgGI9B,EAhGJ,CAgGO,iBACbgB,OAAS,KAAKL,SAAL,CAAeX,EAAf,EAAmBE,IADf,CAEb6B,YAAcf,OAAOnC,MAAP,CAAc,SAAC4B,GAAD,QAAOA,KAAIuB,UAAX,CAAd,CAFD,CAGjB,MAAOD,aAAYjD,GAAZ,CAAgB,SAAC2B,GAAD,QAAO,QAAKU,SAAL,CAAeV,GAAf,iBAAP,CAAhB,CACR,CApGW,CAsGVwB,WAtGU,UAsGEjC,EAtGF,CAsGK,iBACXgB,OAAS,KAAKL,SAAL,CAAeX,EAAf,CADE,CAEXkC,UAAYlB,OAAOd,IAAP,CAAYrB,MAAZ,CAAmB,SAAC4B,GAAD,CAAO,CACxC,MAAOA,KAAI0B,IAAJ,EAAY,CAAC,uBAASnB,OAAOX,OAAhB,CAAyBI,GAAzB,CACrB,CAFe,CAFD,CAMf,MAAOyB,WAAUpD,GAAV,CAAc,SAAC2B,GAAD,CAAO,CAC1B,MAAO,QAAKU,SAAL,CAAeV,GAAf,iBACR,CAFM,CAGR,CA/GW,CAiHV2B,WAjHU,UAiHEpC,EAjHF,CAiHK,iBACXgB,OAAS,KAAKL,SAAL,CAAeX,EAAf,EAAmBE,IADjB,CAEXmC,UAAY,iBAAEC,KAAF,CAAQtB,MAAR,EACbnC,MADa,CACN,SAAC4B,GAAD,QAAOA,KAAI8B,QAAX,CADM,EAEbzD,GAFa,CAET,SAAC2B,GAAD,QAAO,QAAKU,SAAL,CAAeV,GAAf,iBAAP,CAFS,EAGb+B,KAHa,EAFD,CAOf,MAAOH,UACR,CAzHW,CA2HVI,SA3HU,UA2HAzC,EA3HA,CA2HG,CACb,GAAIK,SAAU,KAAKM,SAAL,CAAeX,EAAf,EAAmBK,OAAjC,CACA,MAAO,kBAAEvB,GAAF,CAAMuB,OAAN,CAAe,OAAf,CACR,CA9HW,CAgIVqC,cAhIU,UAgIKlB,GAhIL,CAgIUxB,EAhIV,CAgIa,CACvB,GAAIgB,QAAS,KAAKL,SAAL,CAAeX,EAAf,EAAmBE,IAAhC,CACIyC,KAAO,iBAAE9B,IAAF,CAAOG,MAAP,CAAe,SAACP,GAAD,QAAOA,KAAIe,GAAJ,GAAYA,GAAnB,CAAf,CADX,CAEA,MAAOmB,MAAKlB,KACb,CApIW,CAsIVmB,UAtIU,UAsIC5C,EAtID,CAsII,CACd,MAAO,MAAKW,SAAL,CAAeX,EAAf,EAAmBK,OAC3B,CAxIW,CA0IVc,SA1IU,UA0IA0B,GA1IA,CA0IKC,MA1IL,CA0IY,CACtB,MAAOA,QAAOC,MAAP,CAAc,SAACC,MAAD,CAASC,CAAT,CAAa,CAEhC,MADAD,QAAOC,CAAP,EAAYJ,IAAII,CAAJ,CACZ,CAAOD,MACR,CAHM,IAIR,CA/IW,CAiJVE,UAjJU,UAiJCC,WAjJD,CAiJa,CACvB,MAAO,kBAAEC,MAAF,CAAS,KAAKjE,OAAd,CAAuB,SAACsB,GAAD,CAAO,CACnC,MAAO,uBAAS0C,WAAT,CAAsB1C,GAAtB,CACR,CAFM,CAGR,CArJW,CAuJVH,iBAvJU,UAuJQJ,IAvJR,CAuJa,iBAIvB,MAFA,GAAM,KAAKhB,MAAX,IAEA,CAAO,iBAAEL,MAAF,CAASqB,IAAT,CAAe,SAACH,CAAD,QAAKA,GAAE,OAAKb,MAAP,CAAL,CAAf,CACR,CA5JW,CA8JViB,SA9JU,UA8JAhB,OA9JA,CA8JQ,CAUlB,MATAA,SAAU,iBAAEL,GAAF,CAAMK,OAAN,CAAe,SAASsB,GAAT,CAAa,CACpC,GAAI,CAAC,iBAAE4C,GAAF,CAAM5C,GAAN,CAAW,OAAX,CAAL,CAAyB,CACvB,GAAIgB,OAAQ,KAAK6B,UAAL,CAAgB7C,IAAIe,GAApB,CAAZ,CACAf,IAAIgB,KAAJ,CAAYA,KACb,CAED,MAAOhB,IACR,CAPwB,CAOvB8C,IAPuB,CAOlB,IAPkB,CAAf,CASV,CAAOpE,OACR,CAzKW,C,CA4KdqE,OAAOC,MAAP,CAAcxE,KAAd,+B,CAEA,GAAMyE,cAAeF,OAAOC,MAAP,IAAkB,qBAAaE,SAA/B,CAA0C1E,KAA1C,CAArB,CAmBAyE,aAAaE,aAAb,CAA6B,6BAAkBC,QAAlB,CAjBF,QAArBC,mBAAqB,CAASC,OAAT,CAAiB,CAC1C,GAAIC,QAASD,QAAQC,MAArB,CAEA,OAAQA,OAAO9C,IAAf,EACE,IAAK,gBAAL,CACEwC,aAAa5D,UAAb,CAAwBkE,OAAO7E,OAA/B,CAAwC6E,OAAOhE,EAA/C,CADF,CAEE0D,aAAapE,UAAb,CAAwB,QAAxB,CAFF,CAGE,MAEF,IAAK,eAAL,CACEoE,aAAanD,YAAb,CAA0ByD,OAAO9E,MAAjC,CADF,CAEEwE,aAAapE,UAAb,CAAwB,QAAxB,CAFF,CANF,CAYD,CAE4B,C,CAC7BoE,aAAaO,eAAb,CAA6B,CAA7B,C,iBAEeP,Y","file":"columns_store.js","sourcesContent":["import {EventEmitter as EventEmitter} from 'events';\nimport _ from 'lodash';\nimport includes from 'lodash/includes';\nimport {text_mixins as textMixins} from 'morse-react-mixins';\nimport ColumnsDispatcher from '../dispatchers/columns_dispatcher';\n\nconst FilterMap = (filter, map)=>(array)=>{\n  let newArray = array.filter(filter);\n  return newArray.map(map);\n};\n\nconst store = {\n  device: 'desktop'\n  , columns: []\n  , columns_ids: []\n  , visible_columns: []\n\n  , emitChange(event){\n    this.emit(event);\n  }\n\n  , addChangeListener(event, callback){\n    this.on(event, callback);\n  }\n\n  , removeChangeListener(event, callback){\n    this.removeListener(event, callback);\n  }\n\n  , addColumns(c, id){\n    id   = id || _.uniqueId();\n    let cols = this.setTitles(c);\n    this.columns.push({\n      id: id\n      , cols: cols\n      , visible: this.setVisibleColumns(cols)\n    });\n    return id;\n  }\n\n  , changeDevice(d){\n    this.device = (d) ? d : this.device;\n    this.columns = _.map(this.columns, (col)=>{\n      col.visible = this.setVisibleColumns(col.cols);\n      return col;\n    });\n  }\n\n  , getDevice(){\n    return this.device;\n  }\n\n  , getColumn(id){\n    let items;\n    if (id){\n      items =  _.find(this.columns, (col)=>{\n        return col.id === id;\n      });\n    } else {\n      items = _.first(this.columns);\n    }\n\n    if (items){\n      return items;\n    }\n\n    return {cols: [], visible: []};\n  }\n\n  , getDateColumns(id){\n    let column = this.getColumn(id).cols;\n    const filterCols = FilterMap(\n      (col)=>(col.type === 'date' || col.type === 'dateTime')\n      , (col)=>this.reduceObj(col, ['key', 'title', 'type', 'fmt'])\n    );\n\n    return filterCols(column);\n  }\n\n  , getHeadline(id){\n    return _.find(this.getColumn(id).visible, (col)=>{\n      return col.headline;\n    });\n  }\n\n  , getKeys(id){\n    let visible = this.getColumn(id).visible;\n    return _.map(visible, 'key');\n  }\n\n  , getKeyAndTitle(id){\n    let visible = this.getColumn(id).visible;\n    return visible.map(({key, title})=>Object({key, title}));\n  }\n\n  , getLabeled(id){\n    return _.filter(this.getColumn(id).visible, (col)=>{\n      return col.label;\n    });\n  }\n\n  , getNonLabeled(id){\n    return _.filter(this.getColumn(id).visible, (col)=>{\n      return _.isBoolean(col.label) && !col.label;\n    });\n  }\n\n  , getSearchable(id){\n    let column = this.getColumn(id).cols;\n    let searchables = column.filter((col)=>col.searchable);\n    return searchables.map((col)=>this.reduceObj(col, ['key', 'title']));\n  }\n\n  , getShowable(id){\n    let column = this.getColumn(id);\n    let showables = column.cols.filter((col)=>{\n      return col.show && !includes(column.visible, col);\n    });\n\n    return showables.map((col)=>{\n      return this.reduceObj(col, ['key', 'title']);\n    });\n  }\n\n  , getSortable(id){\n    let column = this.getColumn(id).cols;\n    let sortables = _.chain(column)\n      .filter((col)=>col.sortable)\n      .map((col)=>this.reduceObj(col, ['key', 'title']))\n      .value();\n\n    return sortables;\n  }\n\n  , getTitles(id){\n    let visible = this.getColumn(id).visible;\n    return _.map(visible, 'title');\n  }\n\n  , getTitleForKey(key, id){\n    let column = this.getColumn(id).cols;\n    let item = _.find(column, (col)=>col.key === key);\n    return item.title;\n  }\n\n  , getVisible(id){\n    return this.getColumn(id).visible;\n  }\n\n  , reduceObj(obj, values){\n    return values.reduce((newObj, v)=>{\n      newObj[v] = obj[v];\n      return newObj;\n    }, {});\n  }\n\n  , removeCols(removeItems){\n    return _.reject(this.columns, (col)=>{\n      return includes(removeItems, col);\n    });\n  }\n\n  , setVisibleColumns(cols){\n    let check = {};\n    check[this.device] = true;\n\n    return _.filter(cols, (c)=>c[this.device]);\n  }\n\n  , setTitles(columns){\n    columns = _.map(columns, function(col){\n      if (!_.has(col, 'title')){\n        let title = this.capitalize(col.key);\n        col.title = title;\n      }\n\n      return col;\n    }.bind(this));\n\n    return columns;\n  }\n};\n\nObject.assign(store, textMixins);\n\nconst ColumnsStore = Object.assign({}, EventEmitter.prototype, store);\n\nconst registeredCallback = function(payload){\n  let action = payload.action;\n  /*eslint-disable*/\n  switch (action.type) {\n    case 'ADDING_COLUMNS':\n      ColumnsStore.addColumns(action.columns, action.id);\n      ColumnsStore.emitChange('adding');\n      break;\n\n    case 'CHANGE_DEVICE':\n      ColumnsStore.changeDevice(action.device);\n      ColumnsStore.emitChange('change');\n      break;\n    }\n  /* eslint-enable*/\n};\n\nColumnsStore.dispatchToken = ColumnsDispatcher.register(registeredCallback);\nColumnsStore.setMaxListeners(0);\n\nexport default ColumnsStore;\n"]}