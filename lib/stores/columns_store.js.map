{"version":3,"sources":["../../src/stores/columns_store.js"],"names":[],"mappings":";;AAAA,IAAM,eAAgB,QAAQ,QAAR,EAAkB,YAAxC;;AAEA,IAAM,IAAO,QAAQ,aAAR,CAAb;IACM,WAAW,QAAQ,iBAAR,CADjB;IAEM,OAAO,QAAQ,aAAR,CAFb;;AAIA,IAAM,aAAa,QAAQ,oBAAR,EAA8B,WAAjD;AACA,IAAM,oBAAoB,QAAQ,mCAAR,CAA1B;;AAEA,IAAM,QAAQ;AACZ,UAAQ,SADI;AAEV,WAAS,EAFC;AAGV,eAAa,EAHH;AAIV,mBAAiB,EAJP;;AAMV,YANU,sBAMC,KAND,EAMQ;AAClB,SAAK,IAAL,CAAU,KAAV;AACD,GARW;AAUV,mBAVU,6BAUQ,KAVR,EAUe,QAVf,EAUyB;AACnC,SAAK,EAAL,CAAQ,KAAR,EAAe,QAAf;AACD,GAZW;AAcV,sBAdU,gCAcW,KAdX,EAckB,QAdlB,EAc4B;AACtC,SAAK,cAAL,CAAoB,KAApB,EAA2B,QAA3B;AACD,GAhBW;AAkBV,YAlBU,sBAkBC,CAlBD,EAkBI,EAlBJ,EAkBO;AACjB,SAAO,MAAM,EAAE,QAAF,EAAb;AACA,QAAI,OAAO,KAAK,SAAL,CAAe,CAAf,CAAX;AACA,SAAK,OAAL,CAAa,IAAb,CAAkB;AAChB,UAAI,EADY;AAEd,YAAM,IAFQ;AAGd,eAAS,KAAK,iBAAL,CAAuB,IAAvB;AAHK,KAAlB;AAKA,WAAO,EAAP;AACD,GA3BW;AA6BV,cA7BU,wBA6BG,CA7BH,EA6BK;AAAA;;AACf,SAAK,MAAL,GAAe,CAAD,GAAM,CAAN,GAAU,KAAK,MAA7B;AACA,SAAK,OAAL,GAAe,EAAE,GAAF,CAAM,KAAK,OAAX,EAAoB,UAAC,GAAD,EAAO;AACxC,UAAI,OAAJ,GAAc,MAAK,iBAAL,CAAuB,IAAI,IAA3B,CAAd;AACA,aAAO,GAAP;AACD,KAHc,CAAf;AAID,GAnCW;AAqCV,WArCU,uBAqCC;AACX,WAAO,KAAK,MAAZ;AACD,GAvCW;AAyCV,WAzCU,qBAyCA,EAzCA,EAyCG;AACb,QAAI,cAAJ;AACA,QAAI,EAAJ,EAAO;AACL,cAAS,EAAE,IAAF,CAAO,KAAK,OAAZ,EAAqB,UAAC,GAAD,EAAO;AACnC,eAAO,IAAI,EAAJ,KAAW,EAAlB;AACD,OAFQ,CAAT;AAGD,KAJD,MAIO;AACL,cAAQ,EAAE,KAAF,CAAQ,KAAK,OAAb,CAAR;AACD;;AAED,QAAI,KAAJ,EAAU;AACR,aAAO,KAAP;AACD;;AAED,WAAO,EAAC,MAAM,EAAP,EAAW,SAAS,EAApB,EAAP;AACD,GAxDW;AA0DV,gBA1DU,0BA0DK,EA1DL,EA0DQ;AAAA;;AAClB,QAAI,SAAS,KAAK,SAAL,CAAe,EAAf,EAAmB,IAAhC;AACA,QAAI,QAAQ,EAAE,KAAF,CAAQ,MAAR,EACT,MADS,CACF,UAAC,GAAD;AAAA,aAAQ,IAAI,IAAJ,KAAa,MAAb,IAAuB,IAAI,IAAJ,KAAa,UAA5C;AAAA,KADE,EAET,GAFS,CAEL,UAAC,GAAD;AAAA,aAAO,OAAK,SAAL,CAAe,GAAf,EAAoB,CAAC,KAAD,EAAQ,OAAR,EAAiB,MAAjB,EAAyB,KAAzB,CAApB,CAAP;AAAA,KAFK,EAGT,KAHS,EAAZ;;AAKA,WAAO,KAAP;AACD,GAlEW;AAoEV,aApEU,uBAoEE,EApEF,EAoEK;AACf,WAAO,EAAE,IAAF,CAAO,KAAK,SAAL,CAAe,EAAf,EAAmB,OAA1B,EAAmC,UAAC,GAAD,EAAO;AAC/C,aAAO,IAAI,QAAX;AACD,KAFM,CAAP;AAGD,GAxEW;AA0EV,SA1EU,mBA0EF,EA1EE,EA0EC;AACX,QAAI,UAAU,KAAK,SAAL,CAAe,EAAf,EAAmB,OAAjC;AACA,WAAO,EAAE,GAAF,CAAM,OAAN,EAAe,KAAf,CAAP;AACD,GA7EW;AA+EV,gBA/EU,0BA+EK,EA/EL,EA+EQ;AAAA;;AAClB,QAAI,UAAU,KAAK,SAAL,CAAe,EAAf,EAAmB,OAAjC;AACA,WAAO,EAAE,GAAF,CAAM,OAAN,EAAe,UAAC,GAAD;AAAA,aAAO,OAAK,SAAL,CAAe,GAAf,EAAoB,CAAC,KAAD,EAAQ,OAAR,CAApB,CAAP;AAAA,KAAf,CAAP;AACD,GAlFW;AAoFV,YApFU,sBAoFC,EApFD,EAoFI;AACd,WAAO,EAAE,MAAF,CAAS,KAAK,SAAL,CAAe,EAAf,EAAmB,OAA5B,EAAqC,UAAC,GAAD,EAAO;AACjD,aAAO,IAAI,KAAX;AACD,KAFM,CAAP;AAGD,GAxFW;AA0FV,eA1FU,yBA0FI,EA1FJ,EA0FO;AACjB,WAAO,EAAE,MAAF,CAAS,KAAK,SAAL,CAAe,EAAf,EAAmB,OAA5B,EAAqC,UAAC,GAAD,EAAO;AACjD,aAAO,EAAE,SAAF,CAAY,IAAI,KAAhB,KAA0B,CAAC,IAAI,KAAtC;AACD,KAFM,CAAP;AAGD,GA9FW;AAgGV,eAhGU,yBAgGI,EAhGJ,EAgGO;AAAA;;AACjB,QAAI,SAAS,KAAK,SAAL,CAAe,EAAf,EAAmB,IAAhC;AACA,QAAI,cAAc,EAAE,KAAF,CAAQ,MAAR,EACf,MADe,CACR,UAAC,GAAD;AAAA,aAAO,IAAI,UAAX;AAAA,KADQ,EAEf,GAFe,CAEX,UAAC,GAAD;AAAA,aAAO,OAAK,SAAL,CAAe,GAAf,EAAoB,CAAC,KAAD,EAAQ,OAAR,CAApB,CAAP;AAAA,KAFW,EAGf,KAHe,EAAlB;;AAKA,WAAO,WAAP;AACD,GAxGW;AA0GV,aA1GU,uBA0GE,EA1GF,EA0GK;AAAA;;AACf,QAAI,SAAS,KAAK,SAAL,CAAe,EAAf,CAAb;AACA,QAAI,YAAY,EAAE,KAAF,CAAQ,OAAO,IAAf,EACb,MADa,CACN,UAAC,GAAD,EAAO;AACb,aAAO,IAAI,IAAJ,IAAY,CAAC,SAAS,OAAO,OAAhB,EAAyB,GAAzB,CAApB;AACD,KAHa,EAIb,GAJa,CAIT,UAAC,GAAD;AAAA,aAAO,OAAK,SAAL,CAAe,GAAf,EAAoB,CAAC,KAAD,EAAQ,OAAR,CAApB,CAAP;AAAA,KAJS,EAKb,KALa,EAAhB;AAMA,WAAO,SAAP;AACD,GAnHW;AAqHV,aArHU,uBAqHE,EArHF,EAqHK;AAAA;;AACf,QAAI,SAAS,KAAK,SAAL,CAAe,EAAf,EAAmB,IAAhC;AACA,QAAI,YAAY,EAAE,KAAF,CAAQ,MAAR,EACb,MADa,CACN,UAAC,GAAD;AAAA,aAAO,IAAI,QAAX;AAAA,KADM,EAEb,GAFa,CAET,UAAC,GAAD;AAAA,aAAO,OAAK,SAAL,CAAe,GAAf,EAAoB,CAAC,KAAD,EAAQ,OAAR,CAApB,CAAP;AAAA,KAFS,EAGb,KAHa,EAAhB;;AAKA,WAAO,SAAP;AACD,GA7HW;AA+HV,WA/HU,qBA+HA,EA/HA,EA+HG;AACb,QAAI,UAAU,KAAK,SAAL,CAAe,EAAf,EAAmB,OAAjC;AACA,WAAO,EAAE,GAAF,CAAM,OAAN,EAAe,OAAf,CAAP;AACD,GAlIW;AAoIV,gBApIU,0BAoIK,GApIL,EAoIU,EApIV,EAoIa;AACvB,QAAI,SAAS,KAAK,SAAL,CAAe,EAAf,EAAmB,IAAhC;AACA,QAAI,OAAO,EAAE,IAAF,CAAO,MAAP,EAAe,UAAC,GAAD;AAAA,aAAO,IAAI,GAAJ,KAAY,GAAnB;AAAA,KAAf,CAAX;AACA,WAAO,KAAK,KAAZ;AACD,GAxIW;AA0IV,YA1IU,sBA0IC,EA1ID,EA0II;AACd,WAAO,KAAK,SAAL,CAAe,EAAf,EAAmB,OAA1B;AACD,GA5IW;AA8IV,WA9IU,qBA8IA,GA9IA,EA8IK,MA9IL,EA8IY;AACtB,WAAO,KAAK,GAAL,EAAU,MAAV,CAAP;AACD,GAhJW;AAkJV,YAlJU,sBAkJC,WAlJD,EAkJa;AACvB,WAAO,EAAE,MAAF,CAAS,KAAK,OAAd,EAAuB,UAAC,GAAD,EAAO;AACnC,aAAO,SAAS,WAAT,EAAsB,GAAtB,CAAP;AACD,KAFM,CAAP;AAGD,GAtJW;AAwJV,mBAxJU,6BAwJQ,IAxJR,EAwJa;AAAA;;AACvB,QAAI,QAAQ,EAAZ;AACA,UAAM,KAAK,MAAX,IAAqB,IAArB;;AAEA,WAAO,EAAE,MAAF,CAAS,IAAT,EAAe,UAAC,CAAD;AAAA,aAAK,EAAE,OAAK,MAAP,CAAL;AAAA,KAAf,CAAP;AACD,GA7JW;AA+JV,WA/JU,qBA+JA,OA/JA,EA+JQ;AAClB,cAAU,EAAE,GAAF,CAAM,OAAN,EAAe,UAAS,GAAT,EAAa;AACpC,UAAI,CAAC,EAAE,GAAF,CAAM,GAAN,EAAW,OAAX,CAAL,EAAyB;AACvB,YAAI,QAAQ,KAAK,UAAL,CAAgB,IAAI,GAApB,CAAZ;AACA,YAAI,KAAJ,GAAY,KAAZ;AACD;;AAED,aAAO,GAAP;AACD,KAPwB,CAOvB,IAPuB,CAOlB,IAPkB,CAAf,CAAV;;AASA,WAAO,OAAP;AACD;AA1KW,CAAd;;AA6KA,OAAO,MAAP,CAAc,KAAd,EAAqB,UAArB;;AAEA,IAAM,eAAe,OAAO,MAAP,CAAc,EAAd,EAAkB,aAAa,SAA/B,EAA0C,KAA1C,CAArB;;AAEA,IAAM,qBAAqB,SAArB,kBAAqB,CAAS,OAAT,EAAiB;AAC1C,MAAI,SAAS,QAAQ,MAArB;;AAEA,UAAQ,OAAO,IAAf;AACE,SAAK,gBAAL;AACE,mBAAa,UAAb,CAAwB,OAAO,OAA/B,EAAwC,OAAO,EAA/C;AACA,mBAAa,UAAb,CAAwB,QAAxB;AACA;;AAEF,SAAK,eAAL;AACE,mBAAa,YAAb,CAA0B,OAAO,MAAjC;AACA,mBAAa,UAAb,CAAwB,QAAxB;AACA;AATJ;;AAYD,CAfD;;AAiBA,aAAa,aAAb,GAA6B,kBAAkB,QAAlB,CAA2B,kBAA3B,CAA7B;AACA,aAAa,eAAb,CAA6B,CAA7B;;AAEA,OAAO,OAAP,GAAiB,YAAjB","file":"columns_store.js","sourcesContent":["const EventEmitter  = require('events').EventEmitter;\n\nconst _    = require('lodash/core')\n    , includes = require('lodash/includes')\n    , pick = require('lodash/pick');\n\nconst textMixins = require('morse-react-mixins').text_mixins;\nconst ColumnsDispatcher = require('../dispatchers/columns_dispatcher');\n\nconst store = {\n  device: 'desktop'\n  , columns: []\n  , columns_ids: []\n  , visible_columns: []\n\n  , emitChange(event) {\n    this.emit(event);\n  }\n\n  , addChangeListener(event, callback) {\n    this.on(event, callback);\n  }\n\n  , removeChangeListener(event, callback) {\n    this.removeListener(event, callback);\n  }\n\n  , addColumns(c, id){\n    id   = id || _.uniqueId();\n    let cols = this.setTitles(c);\n    this.columns.push({\n      id: id\n      , cols: cols\n      , visible: this.setVisibleColumns(cols)\n    });\n    return id;\n  }\n\n  , changeDevice(d){\n    this.device = (d) ? d : this.device;\n    this.columns = _.map(this.columns, (col)=>{\n      col.visible = this.setVisibleColumns(col.cols);\n      return col;\n    });\n  }\n\n  , getDevice(){\n    return this.device;\n  }\n\n  , getColumn(id){\n    let items;\n    if (id){\n      items =  _.find(this.columns, (col)=>{\n        return col.id === id;\n      });\n    } else {\n      items = _.first(this.columns);\n    }\n\n    if (items){\n      return items;\n    }\n\n    return {cols: [], visible: []};\n  }\n\n  , getDateColumns(id){\n    let column = this.getColumn(id).cols;\n    let dates = _.chain(column)\n      .filter((col)=>(col.type === 'date' || col.type === 'dateTime'))\n      .map((col)=>this.reduceObj(col, ['key', 'title', 'type', 'fmt']))\n      .value();\n\n    return dates;\n  }\n\n  , getHeadline(id){\n    return _.find(this.getColumn(id).visible, (col)=>{\n      return col.headline;\n    });\n  }\n\n  , getKeys(id){\n    let visible = this.getColumn(id).visible;\n    return _.map(visible, 'key');\n  }\n\n  , getKeyAndTitle(id){\n    let visible = this.getColumn(id).visible;\n    return _.map(visible, (col)=>this.reduceObj(col, ['key', 'title']));\n  }\n\n  , getLabeled(id){\n    return _.filter(this.getColumn(id).visible, (col)=>{\n      return col.label;\n    });\n  }\n\n  , getNonLabeled(id){\n    return _.filter(this.getColumn(id).visible, (col)=>{\n      return _.isBoolean(col.label) && !col.label;\n    });\n  }\n\n  , getSearchable(id){\n    let column = this.getColumn(id).cols;\n    let searchables = _.chain(column)\n      .filter((col)=>col.searchable)\n      .map((col)=>this.reduceObj(col, ['key', 'title']))\n      .value();\n\n    return searchables;\n  }\n\n  , getShowable(id){\n    let column = this.getColumn(id);\n    let showables = _.chain(column.cols)\n      .filter((col)=>{\n        return col.show && !includes(column.visible, col);\n      })\n      .map((col)=>this.reduceObj(col, ['key', 'title']))\n      .value();\n    return showables;\n  }\n\n  , getSortable(id){\n    let column = this.getColumn(id).cols;\n    let sortables = _.chain(column)\n      .filter((col)=>col.sortable)\n      .map((col)=>this.reduceObj(col, ['key', 'title']))\n      .value();\n\n    return sortables;\n  }\n\n  , getTitles(id){\n    let visible = this.getColumn(id).visible;\n    return _.map(visible, 'title');\n  }\n\n  , getTitleForKey(key, id){\n    let column = this.getColumn(id).cols;\n    let item = _.find(column, (col)=>col.key === key);\n    return item.title;\n  }\n\n  , getVisible(id){\n    return this.getColumn(id).visible;\n  }\n\n  , reduceObj(obj, values){\n    return pick(obj, values);\n  }\n\n  , removeCols(removeItems){\n    return _.reject(this.columns, (col)=>{\n      return includes(removeItems, col);\n    });\n  }\n\n  , setVisibleColumns(cols){\n    let check = {};\n    check[this.device] = true;\n\n    return _.filter(cols, (c)=>c[this.device]);\n  }\n\n  , setTitles(columns){\n    columns = _.map(columns, function(col){\n      if (!_.has(col, 'title')){\n        let title = this.capitalize(col.key);\n        col.title = title;\n      }\n\n      return col;\n    }.bind(this));\n\n    return columns;\n  }\n};\n\nObject.assign(store, textMixins);\n\nconst ColumnsStore = Object.assign({}, EventEmitter.prototype, store);\n\nconst registeredCallback = function(payload){\n  let action = payload.action;\n  /*eslint-disable*/\n  switch (action.type) {\n    case 'ADDING_COLUMNS':\n      ColumnsStore.addColumns(action.columns, action.id);\n      ColumnsStore.emitChange('adding');\n      break;\n\n    case 'CHANGE_DEVICE':\n      ColumnsStore.changeDevice(action.device);\n      ColumnsStore.emitChange('change');\n      break;\n    }\n  /*eslint-enable*/\n};\n\nColumnsStore.dispatchToken = ColumnsDispatcher.register(registeredCallback);\nColumnsStore.setMaxListeners(0);\n\nmodule.exports = ColumnsStore;\n"]}