{"version":3,"sources":["../../../src/components/sessions/column_item.jsx"],"names":["ColumnItem","props","formatter","item","places","get","link","title","instruction","value","cancelled","has","col","key","_actions","isString","match","type","_showTime","css","checkCss","_showValues","Component","Object","assign","prototype"],"mappings":"y0FAoBMA,U,4BACJ,oBAAYC,KAAZ,CAAkB,gJACVA,KADU,SAEhB,OAAKC,SAAL,CAAiB,wBAAU,MAAKD,KAAL,CAAWE,IAArB,CAFD,MAGjB,C,uGAES,CACR,GAAIA,KAAJ,CAAUC,MAAV,CACAD,KAAO,KAAKF,KAAL,CAAWE,IAFV,CAGRC,OAASD,KAAKE,GAAL,CAAS,aAAT,CAHD,kBAIyB,6BAAYF,IAAZ,CAJzB,CAIHG,IAJG,cAIHA,IAJG,CAIGC,KAJH,cAIGA,KAJH,CAIUC,WAJV,cAIUA,WAJV,CAKR,MAAQ,mDAAS,OAAQJ,MAAjB,CAAyB,KAAME,IAA/B,CAAqC,MAAOC,KAA5C,CAAmD,YAAaC,WAAhE,EACT,C,qCAEYC,K,CAAM,CACjB,MACE,mDAAU,QAASA,KAAnB,EAEH,C,kCAESA,K,CAAM,CACd,GAAIC,UAAJ,CAAeP,IAAf,CAIA,MAHAA,MAAO,KAAKF,KAAL,CAAWE,IAGlB,CAFAO,YAAaP,KAAKQ,GAAL,CAAS,WAAT,CAAb,EAAsCR,KAAKE,GAAL,CAAS,WAAT,CAEtC,CAAQ,8CACN,KAAQ,KAAKJ,KAAL,CAAWW,GADb,CAEN,QAAW,2BAAYT,IAAZ,CAAkB,KAAKF,KAAL,CAAWW,GAA7B,CAFL,CAGN,KAAQH,KAHF,CAIN,UAAaC,SAJP,EAMT,C,qCAEY,CACX,GAAIE,KAAM,KAAKX,KAAL,CAAWW,GAArB,CACA,GAAgB,SAAZ,OAAIC,GAAR,CAA2B,MAAO,MAAKC,QAAL,CAAcF,GAAd,CAAP,CAC3B,GAAIH,OAAQ,KAAKP,SAAL,CAAeU,GAAf,CAAZ,CAHW,MAKP,kBAAEG,QAAF,CAAWN,KAAX,GAAqBA,MAAMO,KAAN,CAAY,MAAZ,CALd,CAMD,kDAAU,QAASP,KAAnB,EANC,CASM,MAAb,OAAIQ,IATG,CAUF,KAAKC,SAAL,CAAeT,KAAf,CAVE,CAaJA,KACR,C,gCAEO,CACN,GAAIG,IAAJ,CAASO,GAAT,CAGA,MAFAP,KAAM,KAAKX,KAAL,CAAWW,GAEjB,CADAO,IAAM,KAAKC,QAAL,CAAc,KAAKnB,KAAL,CAAWkB,GAAzB,CAA8BP,IAAIC,GAAlC,CACN,CACE,qCAAK,UAAWM,GAAhB,EACE,iDAAS,KAAM,KAAKlB,KAAL,CAAWE,IAA1B,CAAgC,IAAKS,GAArC,EACG,KAAKS,WAAL,EADH,CADF,CAMH,C,gBA5DsB,gBAAMC,S,EA+D/BC,OAAOC,MAAP,CAAcxB,WAAWyB,SAAzB,8B,CACAF,OAAOC,MAAP,CAAcxB,WAAWyB,SAAzB,+B,iBAEezB,U","file":"column_item.js","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\n\nimport ButtonCheck from '../../helpers/buttons_helper';\n\nimport timeChecker from '../../utils/time_checker';\nimport formatter from '../../utils/formatter';\n\n// Components\nimport BookBtn from './stateless/book_btn';\nimport Time from './stateless/time';\nimport RichText from './stateless/richtext';\nimport Wrapper from './stateless/wrapper';\n\n// Mixins\nimport {\n  css_mixins as cssMixins\n  , text_mixins as textMixins\n} from 'morse-react-mixins';\n\nclass ColumnItem extends React.Component{\n  constructor(props){\n    super(props);\n    this.formatter = formatter(this.props.item);\n  }\n\n  _actions(){\n    let item, places;\n    item = this.props.item;\n    places = item.get('places_left');\n    let {link, title, instruction} = ButtonCheck(item);\n    return (<BookBtn places={places} link={link} title={title} instruction={instruction} />);\n  }\n\n  _showContent(value){\n    return (\n      <RichText content={value} />\n    );\n  }\n\n  _showTime(value){\n    let cancelled, item;\n    item = this.props.item;\n    cancelled = (item.has('cancelled')) ? item.get('cancelled') : false;\n    // return 'time';\n    return (<Time\n      cols = {this.props.col}\n      checker = {timeChecker(item, this.props.col)}\n      time = {value}\n      cancelled = {cancelled}\n      />);\n  }\n\n  _showValues(){\n    let col = this.props.col;\n    if (col.key === 'actions') return this._actions(col);\n    let value = this.formatter(col);\n\n    if (_.isString(value) && value.match(/<|>/g)){\n      return (<RichText content={value} />);\n    }\n\n    if (col.type === 'time'){\n      return this._showTime(value);\n    }\n\n    return value;\n  }\n\n  render(){\n    let col, css;\n    col = this.props.col;\n    css = this.checkCss(this.props.css, col.key);\n    return (\n      <div className={css}>\n        <Wrapper item={this.props.item} col={col} >\n          {this._showValues()}\n        </Wrapper>\n      </div>\n    );\n  }\n}\n\nObject.assign(ColumnItem.prototype, cssMixins);\nObject.assign(ColumnItem.prototype, textMixins);\n\nexport default ColumnItem;\n"]}