{"version":3,"sources":["../../../src/components/sessions/data_item.jsx"],"names":["wp","DataItem","props","active","formatter","data","state","columns","datefield","keys","createId","get","mounted","setState","getVisible","addChangeListener","_onChange","bind","removeChangeListener","col","key","visible","map","getShowable","reduce","prev","curr","includes","isEmpty","buttonText","checkCss","css","expand","_createKey","device","getDevice","item","td","_expandTest","_expander","_renderTd","Component","Object","assign","prototype"],"mappings":"sjFAOIA,GAAK,oCAAkB,YAAlB,EAAgC,kBAAhC,C,CAYHC,Q,4BACJ,kBAAYC,KAAZ,CAAkB,0IACVA,KADU,SAEhB,OAAKC,MAAL,CAAc,CAAC,CAACA,SAAD,CAAD,CAFE,CAIhB,MAAKC,SAAL,CAAiB,wBAAU,MAAKF,KAAL,CAAWG,IAArB,CAJD,CAKhB,MAAKC,KAAL,CAAa,CAACD,KAAM,MAAKH,KAAL,CAAWG,IAAlB,CAAwBE,UAAxB,CAAqCC,YAArC,CALG,MAMjB,C,oGAEUC,I,CAAK,CACd,MAAO,MAAKC,QAAL,CAAcD,IAAd,CAAoB,KAAKP,KAAL,CAAWG,IAAX,CAAgBM,GAAhB,CAAoB,IAApB,CAApB,CACR,C,4CAEmB,CAClB,KAAKC,OAAL,GADkB,CAElB,KAAKC,QAAL,CAAc,CAACR,KAAM,KAAKH,KAAL,CAAWG,IAAlB,CAAwBE,QAAS,wBAAaO,UAAb,EAAjC,CAAd,CAFkB,CAGlB,wBAAaC,iBAAb,CAA+B,QAA/B,CAAyC,KAAKC,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAzC,CACD,C,8CAEqB,CACpB,KAAKL,OAAL,GADoB,CAEpB,wBAAaM,oBAAb,CAAkC,QAAlC,CAA4C,KAAKF,SAAjD,CACD,C,oCAEWG,G,CAAI,CACd,GAAgB,QAAZ,OAAIC,GAAR,CAA0B,SAE1B,GAAIC,SAAW,iBAAEC,GAAF,CAAM,wBAAaC,WAAb,EAAN,CAAkC,KAAlC,CAAf,CAEA,MAAO,MAAKrB,KAAL,CAAWG,IAAX,CAAgBmB,MAAhB,CAAuB,SAACC,IAAD,CAAOC,IAAP,CAAaN,GAAb,CAAmB,OAC3C,kBAAEO,QAAF,CAAWN,OAAX,CAAoBD,GAApB,GAA4B,CAAC,iBAAEQ,OAAF,CAAUF,IAAV,CADc,EAKxCD,IACR,CANM,IAOR,C,mCAEU,CACT,GAAII,YAAa7B,GAAG,sBAAH,CAAjB,CACA,MAAQ,qDACN,IAAO,KAAK8B,QAAL,CAAc,KAAK5B,KAAL,CAAW6B,GAAzB,CAA8B,QAA9B,CADD,CAEN,OAAU,KAAK7B,KAAL,CAAW8B,MAFf,CAGN,IAAO,KAAKC,UAAL,CAAgB,QAAhB,CAHD,CAIN,KAAQJ,UAJF,EAMT,C,mCAEU,CACL,KAAKjB,OADA,EAEP,KAAKC,QAAL,CAAc,CACZN,QAAS,wBAAaO,UAAb,EADG,CAEVoB,OAAQ,wBAAaC,SAAb,EAFE,CAAd,CAKH,C,mCAEU,CACT,GAAIC,MAAO,KAAKlC,KAAL,CAAWG,IAAtB,CACA,GAAI+B,MAAQ,KAAK9B,KAAL,CAAWC,OAAvB,CAA+B,CAC7B,GAAI8B,IAAK,iBAAEf,GAAF,CAAM,KAAKhB,KAAL,CAAWC,OAAjB,CAA0B,SAASY,GAAT,CAAa,OAC1C,MAAKmB,WAAL,CAAiBnB,GAAjB,CAD0C,CAErC,KAAKoB,SAAL,EAFqC,CAKtC,qDACN,IAAQ,KAAKrC,KAAL,CAAW6B,GADb,CAEN,IAAQZ,GAFF,CAGN,KAAQiB,IAHF,CAIN,IAAQ,KAAKH,UAAL,CAAgBd,IAAIC,GAApB,CAJF,EAMT,CAXkC,CAWjCH,IAXiC,CAW5B,IAX4B,CAA1B,CAAT,CAaA,MAAOoB,GACR,CACD,MAAO,EACR,C,gCAEO,CACN,MACE,sCAAK,UAAU,UAAf,EACG,KAAKG,SAAL,EADH,CAIH,C,cApFoB,gBAAMC,S,EAuF7BC,OAAOC,MAAP,CAAc1C,SAAS2C,SAAvB,8B,CACAF,OAAOC,MAAP,CAAc1C,SAAS2C,SAAvB,+B,iBAEe3C,Q","file":"data_item.js","sourcesContent":["\nimport React from 'react';\nimport _ from 'lodash';\nimport ColumnsStore from '../../stores/columns_store';\nimport formatter from '../../utils/formatter';\nimport {manageTranslations as TranslationHelper} from '@morsedigital/i18n_helper';\n\nlet wp = TranslationHelper('javascript')('weekly_programme');\n\n// Mixins\nimport {\n  css_mixins as cssMixins\n  , text_mixins as textMixins\n} from 'morse-react-mixins';\n\n// Components\nimport ColumnItem from './column_item';\nimport ExpandBtn from './stateless/expand_btn';\n\nclass DataItem extends React.Component{\n  constructor(props){\n    super(props);\n    this.active = [{active: false}];\n    // this._select.bind(this);\n    this.formatter = formatter(this.props.data);\n    this.state = {data: this.props.data, columns: [], datefield: []};\n  }\n\n  _createKey(keys){\n    return this.createId(keys, this.props.data.get('id'));\n  }\n\n  componentWillMount(){\n    this.mounted = true;\n    this.setState({data: this.props.data, columns: ColumnsStore.getVisible()});\n    ColumnsStore.addChangeListener('change', this._onChange.bind(this));\n  }\n\n  componentWillUnmount(){\n    this.mounted = false;\n    ColumnsStore.removeChangeListener('change', this._onChange);\n  }\n\n  _expandTest(col){\n    if (col.key !== 'expand') return false;\n\n    let visible  = _.map(ColumnsStore.getShowable(), 'key');\n\n    return this.props.data.reduce((prev, curr, key)=>{\n      if (_.includes(visible, key) && !_.isEmpty(curr)){\n        return true;\n      }\n\n      return prev;\n    }, false);\n  }\n\n  _expander(){\n    let buttonText = wp('additional.more_info');\n    return (<ExpandBtn\n      css = {this.checkCss(this.props.css, 'expand')}\n      expand = {this.props.expand}\n      key = {this._createKey('expand')}\n      text = {buttonText}\n    />);\n  }\n\n  _onChange(){\n    if (this.mounted){\n      this.setState({\n        columns: ColumnsStore.getVisible()\n        , device: ColumnsStore.getDevice()\n      });\n    }\n  }\n\n  _renderTd(){\n    let item = this.props.data;\n    if (item && this.state.columns){\n      let td = _.map(this.state.columns, function(col){\n        if (this._expandTest(col)){\n          return this._expander();\n        }\n\n        return (<ColumnItem\n          css  = {this.props.css}\n          col  = {col}\n          item = {item}\n          key  = {this._createKey(col.key)}\n        />);\n      }.bind(this));\n\n      return td;\n    }\n    return '';\n  }\n\n  render(){\n    return (\n      <div className=\"clearfix\">\n        {this._renderTd() }\n      </div>\n    );\n  }\n}\n\nObject.assign(DataItem.prototype, cssMixins);\nObject.assign(DataItem.prototype, textMixins);\n\nexport default DataItem;\n"]}