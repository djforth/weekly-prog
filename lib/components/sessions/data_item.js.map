{"version":3,"sources":["../../../src/components/sessions/data_item.js"],"names":["React","_","ColumnsStore","formatter","TranslationHelper","wp","mixins","css_mixins","text_mixins","cssMixins","textMixins","ColumnItem","ExpandBtn","DataItem","props","active","data","state","columns","datefield","keys","createId","get","mounted","setState","getVisible","addChangeListener","_onChange","bind","removeChangeListener","col","key","visible","map","getShowable","reduce","prev","curr","includes","isEmpty","buttonText","checkCss","css","expand","_createKey","device","getDevice","item","td","_expandTest","_expander","_renderTd","Component","Object","assign","prototype"],"mappings":"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","file":"data_item.js","sourcesContent":["\nimport React from 'react';\n\nimport _ from 'lodash/core';\n\n\nimport ColumnsStore from '../../stores/columns_store';\n\n\nimport formatter from '../../utils/formatter';\n\nimport TranslationHelper from '@morsedigital/i18n_helper';\n\nlet wp = TranslationHelper('javascript')('weekly_programme');\n\n// Mixins\n\nimport mixins from 'morse-react-mixins';\nconst [cssMixins, textMixins]  = [mixins.css_mixins, mixins.text_mixins];\n\n// Components\n\nimport ColumnItem from './column_item';\n\nimport ExpandBtn from './stateless/expand_btn';\n\nclass DataItem extends React.Component{\n  constructor(props){\n    super(props);\n    this.active = [{active: false}];\n    // this._select.bind(this);\n    this.formatter = formatter(this.props.data);\n    this.state = {data: this.props.data, columns: [], datefield: []};\n  }\n\n  _createKey(keys){\n    return this.createId(keys, this.props.data.get('id'));\n  }\n\n  componentWillMount(){\n    this.mounted = true;\n    this.setState({data: this.props.data, columns: ColumnsStore.getVisible()});\n    ColumnsStore.addChangeListener('change', this._onChange.bind(this));\n  }\n\n  componentWillUnmount(){\n    this.mounted = false;\n    ColumnsStore.removeChangeListener('change', this._onChange);\n  }\n\n  _expandTest(col){\n    if (col.key !== 'expand') return false;\n\n    let visible  = _.map(ColumnsStore.getShowable(), 'key');\n\n    return this.props.data.reduce((prev, curr, key)=>{\n      if (_.includes(visible, key) && !_.isEmpty(curr)){\n        return true;\n      }\n\n      return prev;\n    }, false);\n  }\n\n  _expander(){\n    let buttonText = wp('additional.more_info');\n    return (<ExpandBtn\n      css = {this.checkCss(this.props.css, 'expand')}\n      expand = {this.props.expand}\n      key = {this._createKey('expand')}\n      text = {buttonText}\n    />);\n  }\n\n  _onChange(){\n    if (this.mounted){\n      this.setState({\n        columns: ColumnsStore.getVisible()\n        , device: ColumnsStore.getDevice()\n      });\n    }\n  }\n\n  _renderTd(){\n    let item = this.props.data;\n    if (item && this.state.columns){\n      let td = _.map(this.state.columns, function(col){\n\n        if (this._expandTest(col)){\n          return this._expander();\n        }\n\n        return (<ColumnItem\n          css  = {this.props.css}\n          col  = {col}\n          item = {item}\n          key  = {this._createKey(col.key)}\n        />);\n      }.bind(this));\n\n      return td;\n    }\n    return '';\n  }\n\n  render(){\n    return (\n      <div className=\"clearfix\">\n        {this._renderTd()}\n      </div>\n    );\n  }\n}\n\nObject.assign(DataItem.prototype, cssMixins);\nObject.assign(DataItem.prototype, textMixins);\n\nexport default DataItem;\n"]}