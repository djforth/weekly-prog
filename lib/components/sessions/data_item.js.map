{"version":3,"sources":["../../../src/components/sessions/data_item.js"],"names":[],"mappings":"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","file":"data_item.js","sourcesContent":["const React = require('react')\n    , _     = require('lodash/core');\n\nconst ColumnsStore   = require('../../stores/columns_store');\n\nconst formatter   = require('../../utils/formatter');\n\n// Mixins\nlet mixins = require('morse-react-mixins');\nconst [cssMixins, textMixins]  = [mixins.css_mixins, mixins.text_mixins];\n\n// Components\nlet ColumnItem = require('./column_item')\n    , ExpandBtn  = require('./stateless/expand_btn');\n\nclass DataItem extends React.Component{\n  constructor(props){\n    super(props);\n    this.active = [{active: false}];\n    // this._select.bind(this);\n    this.formatter = formatter(this.props.data);\n    this.state = {data: this.props.data, columns: [], datefield: []};\n  }\n\n  _createKey(keys){\n    return this.createId(keys, this.props.data.get('id'));\n  }\n\n  componentWillMount(){\n    this.mounted = true;\n    this.setState({data: this.props.data, columns: ColumnsStore.getVisible()});\n    ColumnsStore.addChangeListener('change', this._onChange.bind(this));\n  }\n\n  componentWillUnmount(){\n    this.mounted = false;\n    ColumnsStore.removeChangeListener('change', this._onChange);\n  }\n\n  _expandTest(col){\n    if (col.key !== 'expand') return false;\n    let visible  = _.map(ColumnsStore.getShowable(), 'key');\n    return this.props.data.reduce((p, v, k)=>{\n      let t = (_.isBoolean(p)) ? p : false;\n      return (t) ? t : _.includes(visible, k);\n    });\n  }\n\n  _expander(){\n    let buttonText = (this.state.active) ? 'Less ' : 'More ';\n    buttonText += 'Information';\n    return (<ExpandBtn\n      css = {this.checkCss(this.props.css, 'expand')}\n      expand = {this.props.expand}\n      key = {this._createKey('expand')}\n      text = {buttonText}\n    />);\n  }\n\n  _onChange(){\n    if (this.mounted){\n      this.setState({\n        columns: ColumnsStore.getVisible()\n      });\n    }\n  }\n\n  _renderTd(){\n    let item = this.props.data;\n    if (item && this.state.columns){\n      let td = _.map(this.state.columns, function(col){\n        if (this._expandTest(col)){\n          return this._expander();\n        }\n\n        return (<ColumnItem\n          css  = {this.props.css}\n          col  = {col}\n          item = {item}\n          key  = {this._createKey(col.key)}\n        />);\n      }.bind(this));\n\n      return td;\n    }\n    return '';\n  }\n\n  render(){\n    return (\n      <div className=\"clearfix\">\n        {this._renderTd()}\n      </div>\n    );\n  }\n}\n\nObject.assign(DataItem.prototype, cssMixins);\nObject.assign(DataItem.prototype, textMixins);\n\nmodule.exports = DataItem;\n"]}