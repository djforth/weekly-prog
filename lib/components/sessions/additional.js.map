{"version":3,"sources":["../../../src/components/sessions/additional.jsx"],"names":["includes","reject","Additional","props","state","columns","getShowable","mounted","setState","addChangeListener","_onChange","bind","removeChangeListener","item","has","get","col","key","places","filter","isEmpty","data","createId","link","title","instruction","extra","li","map","active","info","_renderList","_renderActions","Component","Object","assign","prototype"],"mappings":"wqFAMA,iBAAEA,QAAF,iB,CACA,iBAAEC,MAAF,e,IAgBMC,W,4BACJ,oBAAYC,KAAZ,CAAkB,gJACVA,KADU,SAEhB,OAAKC,KAAL,CAAa,CAACC,QAAS,wBAAaC,WAAb,EAAV,CAFG,MAGjB,C,iHAEmB,CAClB,KAAKC,OAAL,GADkB,CAElB,KAAKC,QAAL,CAAc,CAACH,QAAS,wBAAaC,WAAb,EAAV,CAAd,CAFkB,CAGlB,wBAAaG,iBAAb,CAA+B,QAA/B,CAAyC,KAAKC,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAzC,CACD,C,8CAEqB,CACpB,KAAKJ,OAAL,GADoB,CAEpB,wBAAaK,oBAAb,CAAkC,QAAlC,CAA4C,KAAKF,SAAjD,CACD,C,mCAEU,CACL,KAAKH,OADA,EAEP,KAAKC,QAAL,CAAc,CACZH,QAAS,wBAAaC,WAAb,EADG,CAAd,CAIH,C,qCAEYO,I,CAAK,CAChB,MAAOA,MAAKC,GAAL,CAAS,SAAT,GAAuBD,KAAKE,GAAL,CAAS,SAAT,EAAoBD,GAApB,CAAwB,MAAxB,CAC/B,C,wCAEe,CACd,GAAIE,IAAJ,CAASH,IAAT,CAAeI,GAAf,CAAoBC,MAApB,CAGA,GADAF,IAAM,iBAAEG,MAAF,CAAS,KAAKf,KAAL,CAAWC,OAApB,CAA6B,CAACY,IAAK,SAAN,CAA7B,CACN,CAAI,iBAAEG,OAAF,CAAUJ,GAAV,CAAJ,CAAoB,MAAO,EAAP,CAEpBH,KAAO,KAAKV,KAAL,CAAWkB,IANJ,CAQdH,OAASL,KAAKE,GAAL,CAAS,aAAT,CARK,CAUdE,IAAM,KAAKK,QAAL,CAAcN,IAAIC,GAAlB,CAAuBJ,KAAKE,GAAL,CAAS,IAAT,CAAvB,CAVQ,kBAWmB,6BAAYF,IAAZ,CAXnB,CAWTU,IAXS,cAWTA,IAXS,CAWHC,KAXG,cAWHA,KAXG,CAWIC,WAXJ,cAWIA,WAXJ,CAYd,MAAQ,mDACN,OAAUP,MADJ,CAEN,KAAUK,IAFJ,CAGN,MAASC,KAHH,CAIN,YAAaC,WAJP,CAKN,IAAUR,GALJ,EAOT,C,qCAEY,iBACPI,WADO,CACDK,YADC,CAQX,GANAL,KAAO,KAAKlB,KAAL,CAAWkB,IAMlB,CALAK,MAAQ,iBAAEzB,MAAF,CAAS,KAAKG,KAAL,CAAWC,OAApB,CAA6B,SAACW,GAAD,CAAO,CAC1C,MAAmB,aAAZ,OAAIC,GAAJ,EACO,SAAZ,OAAIA,GACP,CAHO,CAKR,CAAII,MAAQK,KAAZ,CAAkB,CAChB,GAAIC,IAAK,iBAAEC,GAAF,CAAMF,KAAN,CAAa,SAACV,GAAD,CAAO,CAC3B,GAAIC,KAAM,OAAKK,QAAL,CAAcN,IAAIC,GAAlB,CAAuB,OAAKd,KAAL,CAAWkB,IAAX,CAAgBN,GAAhB,CAAoB,IAApB,CAAvB,CAAV,CACA,MACE,qCAAI,UAAU,0BAAd,CACE,IAAQE,GADV,EAEE,4CAASD,IAAIQ,KAAb,MAFF,CAGE,4DACE,IAAQR,GADV,CAEE,KAAQK,IAFV,EAHF,CASH,CAZQ,CAAT,CAcA,MAAOM,GACR,CAED,MAAO,EACR,C,gCAEO,CACN,MAAQ,sCAAK,wBAAyB,KAAKxB,KAAL,CAAW0B,MAAzC,EACH,oCAAI,UAAW,KAAK1B,KAAL,CAAW2B,IAA1B,EACE,KAAKC,WAAL,EADF,CADG,CAIJ,qCAAK,UAAU,aAAf,EACE,kDAAU,QAAS,KAAK5B,KAAL,CAAWkB,IAAX,CAAgBN,GAAhB,CAAoB,aAApB,CAAnB,EADF,CAJI,CAOH,KAAKiB,cAAL,EAPG,CAST,C,gBAzFsB,gBAAMC,S,EA4F/BC,OAAOC,MAAP,CAAcjC,WAAWkC,SAAzB,8B,CACAF,OAAOC,MAAP,CAAcjC,WAAWkC,SAAzB,+B,iBAEelC,U","file":"additional.js","sourcesContent":["// Libraries\n import React from 'react';\n import _, {\n  includes\n  , reject\n } from 'lodash';\n_.includes = includes;\n_.reject = reject;\n\n import ColumnsStore from '../../stores/columns_store';\n\n// Mixins\n import {css_mixins as cssMixins} from 'morse-react-mixins';\n import {text_mixins as textMixins} from 'morse-react-mixins';\n\n// Helpers\n import ButtonCheck from '../../helpers/buttons_helper';\n// console.log('ButtonCheck', ButtonCheck)\nimport AdditionalContent from './stateless/additional_content';\nimport BookBtn from './stateless/book_btn';\n// import Description from './stateless/description';\nimport RichText from './stateless/richtext';\n\nclass Additional extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {columns: ColumnsStore.getShowable()};\n  }\n\n  componentWillMount(){\n    this.mounted = true;\n    this.setState({columns: ColumnsStore.getShowable()});\n    ColumnsStore.addChangeListener('change', this._onChange.bind(this));\n  }\n\n  componentWillUnmount(){\n    this.mounted = false;\n    ColumnsStore.removeChangeListener('change', this._onChange);\n  }\n\n  _onChange(){\n    if (this.mounted){\n      this.setState({\n        columns: ColumnsStore.getShowable()\n      });\n    }\n  }\n\n  _checkButton(item){\n    return item.has('buttons') && item.get('buttons').has('book');\n  }\n\n  _renderActions(){\n    let col, item, key, places;\n\n    col = _.filter(this.state.columns, {key: 'actions'});\n    if (_.isEmpty(col)) return '';\n\n    item = this.props.data;\n\n    places = item.get('places_left');\n\n    key = this.createId(col.key, item.get('id'));\n    let {link, title, instruction} = ButtonCheck(item);\n    return (<BookBtn\n      places = {places}\n      link   = {link}\n      title  ={title}\n      instruction={instruction}\n      key    = {key}\n    />);\n  }\n\n  _renderList(){\n    let data, extra;\n    data = this.props.data;\n    extra = _.reject(this.state.columns, (col)=>{\n      return col.key === 'description' ||\n        col.key === 'actions';\n    });\n\n    if (data && extra){\n      let li = _.map(extra, (col)=>{\n        let key = this.createId(col.key, this.props.data.get('id'));\n        return (\n          <li className=\"list-group-item col-md-4\"\n            key  = {key}>\n            <strong>{col.title}: </strong>\n            <AdditionalContent\n              col  = {col}\n              item = {data}\n            />\n          </li>\n        );\n      });\n\n      return li;\n    }\n\n    return '';\n  }\n\n  render(){\n    return (<div className={`additional ${this.props.active}`}>\n         <ul className={this.props.info}>\n          {this._renderList()}\n        </ul>\n        <div className=\"description\">\n          <RichText content={this.props.data.get('description')} />\n        </div>\n        {this._renderActions()}\n      </div>);\n  }\n}\n\nObject.assign(Additional.prototype, cssMixins);\nObject.assign(Additional.prototype, textMixins);\n\nexport default Additional;\n\n"]}