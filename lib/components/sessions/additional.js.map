{"version":3,"sources":["../../../src/components/sessions/additional.js"],"names":["React","_","includes","reject","ColumnsStore","css_mixins","cssMixins","text_mixins","textMixins","ButtonCheck","AdditionalContent","BookBtn","Description","RichText","Additional","props","state","columns","getShowable","mounted","setState","addChangeListener","_onChange","bind","removeChangeListener","item","has","get","col","key","places","filter","isEmpty","data","createId","link","title","instruction","extra","li","map","active","info","_renderList","_renderActions","Component","Object","assign","prototype"],"mappings":"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","file":"additional.js","sourcesContent":["// Libraries\n\nimport React from 'react';\n\nimport _ from 'lodash/core';\nimport includes from 'lodash/includes';\n _.includes = includes;\nimport reject from 'lodash/reject';\n _.reject = reject;\n\n\nimport ColumnsStore from '../../stores/columns_store';\n\n// Mixins\nimport {css_mixins as cssMixins} from 'morse-react-mixins';\nimport {text_mixins as textMixins} from 'morse-react-mixins';\n\n// Helpers\n\nimport ButtonCheck from '../../helpers/buttons_helper';\n// console.log('ButtonCheck', ButtonCheck)\n\n\nimport AdditionalContent from './stateless/additional_content';\n\nimport BookBtn from './stateless/book_btn';\n\nimport Description from './stateless/description';\n\nimport RichText from './stateless/richtext';\n\nclass Additional extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {columns: ColumnsStore.getShowable()};\n  }\n\n  componentWillMount(){\n    this.mounted = true;\n    this.setState({columns: ColumnsStore.getShowable()});\n    ColumnsStore.addChangeListener('change', this._onChange.bind(this));\n  }\n\n  componentWillUnmount(){\n    this.mounted = false;\n    ColumnsStore.removeChangeListener('change', this._onChange);\n  }\n\n  _onChange(){\n    if (this.mounted){\n      this.setState({\n        columns: ColumnsStore.getShowable()\n      });\n    }\n  }\n\n  _checkButton(item){\n    return item.has('buttons') && item.get('buttons').has('book');\n  }\n\n  _renderActions(){\n    let col, item, key, places;\n\n    col = _.filter(this.state.columns, {key: 'actions'});\n    if (_.isEmpty(col)) return '';\n\n    item = this.props.data;\n\n    places = item.get('places_left');\n\n    key = this.createId(col.key, item.get('id'));\n    let {link, title, instruction} = ButtonCheck(item);\n    return (<BookBtn\n      places = {places}\n      link   = {link}\n      title  ={title}\n      instruction={instruction}\n      key    = {key}\n    />);\n  }\n\n  _renderList(){\n    let data, extra;\n    data = this.props.data;\n    extra = _.reject(this.state.columns, (col)=>{\n      return col.key === 'description' ||\n        col.key === 'actions';\n    });\n\n    if (data && extra){\n      let li = _.map(extra, (col)=>{\n        let key = this.createId(col.key, this.props.data.get('id'));\n        return (\n          <li className=\"list-group-item col-md-4\"\n            key  = {key}>\n            <strong>{col.title}: </strong>\n            <AdditionalContent\n              col  = {col}\n              item = {data}\n            />\n          </li>\n        );\n      });\n\n      return li;\n    }\n\n    return '';\n  }\n\n  render(){\n    return (<div className={`additional ${this.props.active}`}>\n         <ul className={this.props.info}>\n          {this._renderList()}\n        </ul>\n        <div className=\"description\">\n          <RichText content={this.props.data.get('description')} />\n        </div>\n        {this._renderActions()}\n      </div>);\n  }\n}\n\nObject.assign(Additional.prototype, cssMixins);\nObject.assign(Additional.prototype, textMixins);\n\nexport default Additional;\n\n"]}