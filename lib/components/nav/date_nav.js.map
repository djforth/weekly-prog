{"version":3,"sources":["../../../src/components/nav/date_nav.jsx"],"names":["React","_","take","mapValues","reject","checker","css_mixins","cssMixins","text_mixins","textMixins","widths_mixins","widthsMixins","SessionsActions","SessionsStore","ColumnsStore","ArrowLeft","ArrowRight","NavItem","TodayItem","DateNav","props","current","dates","today","_splitDates","date","pos","state","listWidth","listPos","setState","_setWidth","holderWidth","document","querySelector","offsetWidth","widths","getMoreDays","addChangeListener","_getDates","bind","_reset","_deviceChange","removeChangeListener","device","getDevice","isDate","_getCurrentDate","alert","move","isEmpty","reduce","prev","cur","firstDate","tomorrow","clone","setDate","getDate","first","getPreviousDays","dir","e","elms","mover","preventDefault","getAllWidths","length","map","_getDistance","_getPrevious","changeDate","styles","width","left","v","convertDomlist","refs","datelist","querySelectorAll","Math","ceil","getWidths","_getAllDates","find","d","key","createId","title","getMonth","_setCurrent","_setActive","_mover","_renderToday","_setStyle","_renderDates","Component","Object","assign","prototype"],"mappings":"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","file":"date_nav.js","sourcesContent":["// Libraries\n\nimport React from 'react';\n\nimport _ from 'lodash/core';\nimport take from 'lodash/take';\n _.take = take;\nimport mapValues from 'lodash/mapValues';\n _.mapValues = mapValues;\nimport reject from 'lodash/reject';\n _.reject = reject;\n\n// Utils\nimport checker from '../../utils/day_checker';\n\n// Mixins\nimport {\n  css_mixins as cssMixins\n  , text_mixins as textMixins\n  , widths_mixins as widthsMixins\n} from 'morse-react-mixins';\n\n// Flux\nimport SessionsActions from '../../actions/sessions_actions';\nimport SessionsStore from '../../stores/sessions_store';\nimport ColumnsStore from '../../stores/columns_store';\n\nimport ArrowLeft from './stateless/arrow_left';\nimport ArrowRight from './stateless/arrow_right';\nimport NavItem from './stateless/nav_item';\nimport TodayItem from './stateless/today_nav_item';\n\nclass DateNav extends React.Component{\n  constructor(props){\n    let current, dates, today;\n    super(props);\n    dates = this._splitDates();\n    today = dates[0];\n    current = today.date;\n    this.pos = 0;\n    this.state = {\n      dates: dates[1]\n      , today: today\n      , current: current\n      , listWidth: 1000\n      , listPos: 0\n    };\n  }\n\n  componentDidMount(){\n    this.setState({listWidth: this._setWidth()});\n  }\n\n  componentDidUpdate(){\n    let holderWidth, listWidth;\n    holderWidth = document.querySelector('.list-holder').offsetWidth;\n    listWidth  = this._setWidth();\n    if (listWidth === this.state.listWidth){\n      let widths = this.state.listWidth + this.state.listPos;\n\n      if (holderWidth > widths){\n        SessionsActions.getMoreDays();\n      }\n    } else {\n      this.setState({listWidth: this._setWidth()});\n    }\n  }\n\n  componentWillMount(){\n    SessionsStore.addChangeListener('fetched', this._getDates.bind(this));\n    SessionsStore.addChangeListener('changing_date', this._getDates.bind(this));\n    SessionsStore.addChangeListener('calendar_changing'\n                                   , this._reset.bind(this)\n                                  );\n    ColumnsStore.addChangeListener('change', this._deviceChange.bind(this));\n  }\n\n  componentWillUnmount(){\n    SessionsStore.removeChangeListener('calendar_changing', this._reset);\n    SessionsStore.removeChangeListener('fetched', this._getDates);\n    SessionsStore.removeChangeListener('changing_date', this._getDates);\n    ColumnsStore.removeChangeListener('change', this._deviceChange);\n  }\n\n  _deviceChange(){\n    this.setState({\n      listWidth: this._setWidth()\n      , device: ColumnsStore.getDevice()\n    });\n  }\n\n  _getDates(){\n    let dates, today;\n    dates = this._splitDates();\n    today = dates[0];\n    if (!_.isDate(today.date) || !_.isDate(SessionsStore._getCurrentDate())){\n      alert(today.date + ' : ' + SessionsStore._getCurrentDate());\n    }\n    this.setState({\n      dates: dates[1]\n      , today: today\n      , listWidth: this._setWidth()\n      , current: SessionsStore._getCurrentDate()\n    });\n  }\n\n  _getDistance(move){\n    if (_.isEmpty(move)) return 0;\n\n    return _.reduce(move, (prev, cur)=>{\n      return prev + cur;\n    });\n  }\n\n  _getPrevious(pos){\n    if (pos >= 0){\n      let firstDate, tomorrow;\n      tomorrow = _.clone(this.state.today.date);\n      tomorrow.setDate(tomorrow.getDate() + 1);\n      firstDate = _.first(this.state.dates).date;\n      if (!checker(tomorrow, firstDate)){\n        SessionsActions.getPreviousDays(firstDate);\n      }\n    }\n  }\n\n  _mover(dir, e){\n    let elms, move, mover;\n    e.preventDefault();\n    elms = this.getAllWidths();\n    if (dir === 'left' && this.pos > 0){\n      this.pos--;\n    } else if ((dir === 'right' && this.pos < elms.length)){\n      this.pos++;\n    }\n\n    move  = _.map(_.take(elms, this.pos), 'width');\n    mover = -this._getDistance(move);\n    this.setState({listPos: mover});\n    this._getPrevious(mover);\n  }\n\n  _setCurrent(date, e){\n    e.preventDefault();\n    SessionsActions.changeDate(date);\n    this.setState({current: date});\n  }\n\n  _setActive(date){\n    return (checker(date, this.state.current)) ? 'active' : '';\n  }\n\n  _setStyle(){\n    let styles = {\n      width: this.state.listWidth\n      , left: this.state.listPos\n    };\n\n    return _.mapValues(styles, (v)=>{\n      return v;\n    });\n  }\n\n  _setWidth(){\n    this.convertDomlist(this.refs.datelist.querySelectorAll('li'));\n    return Math.ceil(this.getWidths());\n  }\n\n  _splitDates(){\n    let dates = SessionsStore._getAllDates();\n    return [_.find(dates, (d)=>d.today), _.reject(dates, (d)=>d.today)];\n  }\n\n  _reset(){\n    this.setState({listPos: 0});\n  }\n\n  _renderDates(){\n    if (this.state.dates.length){\n      return _.map(this.state.dates, (d)=>{\n        let key = this.createId(d.title, d.date.getDate(), d.date.getMonth());\n        return (<NavItem\n            key      = {key}\n            nav_item = {d}\n            device   = {this.state.device}\n            onClick  = {this._setCurrent.bind(this, d.date)}\n            active   = {this._setActive(d.date)}\n          />);\n      });\n    }\n\n    return [];\n  }\n\n  _renderToday(){\n    let key, today;\n    today = this.state.today;\n    key = this.createId(today.title\n      , today.date.getDate()\n      , today.date.getMonth()\n    );\n    return (\n     <TodayItem\n        key      = {key}\n        nav_item = {today}\n        device   = {this.state.device}\n        onClick  = {this._setCurrent.bind(this, today.date)}\n        active   = {this._setActive(today.date)}\n      />\n    );\n  }\n\n  render(){\n    return (\n      <nav className=\"date-nav\">\n        <ArrowLeft onClick={this._mover.bind(this, 'left')}/>\n        {this._renderToday()}\n        <div className=\"list-holder\">\n          <ul className=\"date-list\"\n              role=\"tablist\"\n              ref=\"datelist\"\n              style={this._setStyle()}>\n            {this._renderDates()}\n          </ul>\n        </div>\n        <ArrowRight onClick={this._mover.bind(this, 'right')}/>\n      </nav>\n    );\n  }\n}\n\nObject.assign(DateNav.prototype, cssMixins);\nObject.assign(DateNav.prototype, textMixins);\nObject.assign(DateNav.prototype, widthsMixins);\n\nexport default DateNav;\n"]}