{"version":3,"sources":["../../src/components/weekly_prog.js"],"names":[],"mappings":"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","file":"weekly_prog.js","sourcesContent":["// Libraries\nconst React = require('react')\n    , _     = require('lodash/core');\n\n// Mixins\nconst cssMixins    = require('morse-react-mixins').css_mixins\n    , textMixins   = require('morse-react-mixins').text_mixins\n    , widthsMixins = require('morse-react-mixins').widths_mixins;\n\n// Morse Libraies\nconst ViewportDetect = require('viewport-detection-es6');\n\n// Flux\nconst ColumnsActions  = require('../actions/columns_actions')\n    , SessionsActions = require('../actions/sessions_actions')\n    , SessionsStore   = require('../stores/sessions_store');\n\n// Components\nconst DateNav        = require('./nav/date_nav')\n    , PeriodSessions = require('./sessions/period_sessions')\n    , TopBar         = require('./topbar/top_bar');\n\nclass WeeklyProg extends React.Component{\n  constructor(props){\n    super(props);\n    SessionsActions.setGroupby(this.props.groupby);\n\n    this.percent = 0;\n    this.state = {sessions: [], keys: [], visible: [], device: 'desktop'};\n  }\n\n  _fetchData(){\n    SessionsStore.removeChangeListener('api_set', this._fetchData);\n    _.defer(()=>{\n      SessionsActions.fetchData();\n    });\n  }\n\n  _getSessions(){\n    let session = SessionsStore._getDate();\n    if (!_.isEmpty(session)){\n      this.setState({date: session.date, sessions: session.data});\n    }\n  }\n\n  _renderPeriodSessions(){\n    return _.map(this.props.timeperiod, (tp)=>{\n      return (<PeriodSessions {...this.props}\n        devive   = {this.state.device}\n        sessions = {this.state.sessions}\n        time     = {tp.time}\n        title    = {tp.title}\n        key      = {tp.title.toLowerCase()} />);\n    });\n  }\n\n  componentWillMount(){\n    SessionsStore.addChangeListener('prerender', this._getSessions.bind(this));\n    let ses = (_.isEmpty(this.props.sessions)) ? [] : this.props.sessions;\n    SessionsActions.prerenderData(ses);\n    ColumnsActions.addingColumns(this.props.columns);\n    ColumnsActions.changeDevice(this.device);\n  }\n\n  componentDidMount(){\n    this.detect = new ViewportDetect();\n    this.device = this.detect.getDevice();\n    this.size  = this.detect.windowSize();\n    ColumnsActions.changeDevice(this.device);\n\n    this.id = this.detect.trackSize(this._onDeviceChange.bind(this));\n    SessionsStore.addChangeListener('api_set', this._fetchData.bind(this));\n    SessionsActions.setApi(this.props.sessionsApi);\n  }\n\n  componentWillUnmount(){\n    this.detect.removeCallback(this.id);\n    SessionsStore.removeChangeListener('prerender', this._getSessions);\n  }\n\n  _onDeviceChange(device, size){\n    if (this.device !== device){\n      this.device = device;\n      ColumnsActions.changeDevice(device);\n    }\n    this.size   = size;\n  }\n\n  render(){\n    return (\n      <div className=\"weekly-prog\">\n        <TopBar\n          device={this.state.device}\n          print={this.props.print}\n        />\n        <DateNav />\n        <div id=\"sessions\" className=\"clearfix\">\n          {this._renderPeriodSessions()}\n        </div>\n      </div>\n    );\n  }\n\n}\n\nObject.assign(WeeklyProg.prototype, cssMixins);\nObject.assign(WeeklyProg.prototype, textMixins);\nObject.assign(WeeklyProg.prototype, widthsMixins);\n\nmodule.exports = WeeklyProg;\n"]}