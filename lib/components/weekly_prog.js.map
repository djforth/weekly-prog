{"version":3,"sources":["../../src/components/weekly_prog.js"],"names":[],"mappings":"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","file":"weekly_prog.js","sourcesContent":["//Libraries\nconst React = require(\"react\")\n    , _     = require(\"lodash\");\n\n//Mixins\nconst cssMixins    = require(\"morse-react-mixins\").css_mixins\n    , textMixins   = require(\"morse-react-mixins\").text_mixins\n    , widthsMixins = require(\"morse-react-mixins\").widths_mixins;\n\n// Morse Libraies\nconst ViewportDetect = require(\"viewport-detection-es6\");\n\n//Flux\nconst ColumnsActions  = require(\"../actions/columns_actions\")\n    , ColumnsStore    = require(\"../stores/columns_store\")\n    , SessionsActions = require(\"../actions/sessions_actions\")\n    , SessionsStore   = require(\"../stores/sessions_store\");\n\n// Components\nconst DateNav        = require(\"./date_nav\")\n    , Calendar       = require(\"./calendar\")\n    , PeriodSessions = require(\"./period_sessions\")\n    , PrintBtn       = require(\"./print_btn\");\n\n\nclass WeeklyProg extends React.Component {\n  constructor(props) {\n    super(props);\n    SessionsActions.setGroupby(this.props.groupby);\n\n    this.percent = 0;\n    this.state = {sessions:[], keys:[], visible:[], device:\"desktop\"};\n  }\n\n  _fetchData(){\n    SessionsStore.removeChangeListener(\"api_set\", this._fetchData);\n    _.defer(()=>{\n      SessionsActions.fetchData()\n    });\n  }\n\n  _getSessions(){\n\n    let session = SessionsStore._getDate()\n    if(!_.isEmpty(session)) {\n      this.setState({date:session.date, sessions:session.data})\n    }\n  }\n\n\n\n  _renderPeriodSessions(){\n    return _.map(this.props.timeperiod, (tp)=>{\n      return (<PeriodSessions {...this.props}\n        devive   = {this.state.device}\n        sessions = {this.state.sessions}\n        time     = {tp.time}\n        title    = {tp.title}\n        key      = {tp.title.toLowerCase()} />)\n    });\n  }\n\n  componentWillMount(){\n    SessionsStore.addChangeListener(\"prerender\", this._getSessions.bind(this));\n    if(!_.isEmpty(this.props.sessions)){\n      SessionsActions.prerenderData(this.props.sessions);\n    }\n\n    ColumnsActions.addingColumns(this.props.columns);\n    ColumnsActions.changeDevice(this.device);\n\n\n  }\n\n  componentDidMount(){\n    this.detect = new ViewportDetect();\n    this.device = this.detect.getDevice();\n    this.size  = this.detect.windowSize();\n    ColumnsActions.changeDevice(this.device);\n    // this.setState({device:this.device});\n    this.id = this.detect.trackSize(this._onDeviceChange.bind(this));\n\n    // SessionsStore.addChangeListener(\"fetched\", this._onLoaded.bind(this));\n    SessionsStore.addChangeListener(\"api_set\", this._fetchData.bind(this));\n    SessionsActions.setApi(this.props.sessionsApi);\n\n  }\n\n  componentWillUnmount() {\n    this.detect.removeCallback(this.id);\n    SessionsStore.removeChangeListener(\"prerender\", this._getSessions);\n    // SessionsStore.removeChangeListener(\"fetched\", this._onLoaded);\n  }\n\n  _onDeviceChange(device, size){\n      if(this.device !== device){\n        this.device = device;\n        ColumnsActions.changeDevice(device);\n      }\n\n      this.size   = size;\n\n  }\n\n\n  render(){\n\n    return (\n    <div className=\"weekly-prog\">\n      <div className=\"clearfix calendar-bar\">\n        <Calendar device={this.state.device} />\n        <PrintBtn print={this.props.print} />\n      </div>\n      <DateNav device={this.state.device} />\n      <div id=\"sessions\" className=\"clearfix\">\n      {this._renderPeriodSessions()}\n      </div>\n\n    </div>\n\n    );\n  }\n\n}\n\nObject.assign(WeeklyProg.prototype, cssMixins);\nObject.assign(WeeklyProg.prototype, textMixins);\nObject.assign(WeeklyProg.prototype, widthsMixins);\n\nmodule.exports = WeeklyProg;\n"]}