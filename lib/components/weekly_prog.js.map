{"version":3,"sources":["../../src/components/weekly_prog.jsx"],"names":["WeeklyProg","props","locale","locales","setGroupby","groupby","percent","state","sessions","keys","visible","device","hasError","error","info","console","log","setState","logErrorToMyService","addChangeListener","_getSessions","bind","ses","isEmpty","prerenderData","addingColumns","columns","changeDevice","detect","getDevice","size","windowSize","id","trackSize","_onDeviceChange","_fetchData","setApi","sessionsApi","removeCallback","removeChangeListener","defer","fetchData","session","_getDate","date","data","map","timeperiod","tp","time","title","toLowerCase","print","_renderPeriodSessions","Component","Object","assign","prototype"],"mappings":"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","file":"weekly_prog.js","sourcesContent":["// Libraries\nimport React from 'react';\nimport _ from 'lodash';\nimport Moment from 'moment';\nimport 'moment/locale/cy';\n\n// Mixins\nimport {\n  css_mixins as cssMixins\n  , text_mixins as textMixins\n  , widths_mixins as widthsMixins\n} from 'morse-react-mixins';\n\n// Morse Libraies\n\nimport ViewportDetect from 'viewport-detection-es6';\n\n// Flux\n\nimport ColumnsActions from '../actions/columns_actions';\nimport SessionsActions from '../actions/sessions_actions';\nimport SessionsStore from '../stores/sessions_store';\n\n// Components\nimport DateNav from './nav/date_nav';\nimport PeriodSessions from './sessions/period_sessions';\nimport TopBar from './topbar/top_bar';\n\nclass WeeklyProg extends React.Component{\n  constructor(props){\n    super(props);\n    Moment.locale(props.locales);\n    SessionsActions.setGroupby(this.props.groupby);\n\n    this.percent = 0;\n    this.state = {sessions: [], keys: [], visible: [], device: 'desktop', hasError: false};\n  }\n\n  componentDidCatch(error, info){\n    console.log(this.props);\n    // Display fallback UI\n    this.setState({hasError: true});\n    // You can also log the error to an error reporting service\n    logErrorToMyService(error, info);\n  }\n\n  componentWillMount(){\n    SessionsStore.addChangeListener('prerender', this._getSessions.bind(this));\n    let ses = (_.isEmpty(this.props.sessions)) ? [] : this.props.sessions;\n    SessionsActions.prerenderData(ses);\n    ColumnsActions.addingColumns(this.props.columns);\n    ColumnsActions.changeDevice(this.device);\n  }\n\n  componentDidMount(){\n    this.detect = new ViewportDetect();\n    this.device = this.detect.getDevice();\n    this.size  = this.detect.windowSize();\n    ColumnsActions.changeDevice(this.device);\n\n    this.id = this.detect.trackSize(this._onDeviceChange.bind(this));\n    SessionsStore.addChangeListener('api_set', this._fetchData.bind(this));\n    SessionsActions.setApi(this.props.sessionsApi);\n  }\n\n  componentWillUnmount(){\n    this.detect.removeCallback(this.id);\n    SessionsStore.removeChangeListener('prerender', this._getSessions);\n  }\n\n  // shouldComponentUpdate(){\n  //   return true\n  // }\n\n  _fetchData(){\n    SessionsStore.removeChangeListener('api_set', this._fetchData);\n    _.defer(()=>{\n      SessionsActions.fetchData();\n    });\n  }\n\n  _getSessions(){\n    let session = SessionsStore._getDate();\n    if (!_.isEmpty(session)){\n      this.setState({date: session.date, sessions: session.data});\n    }\n  }\n\n  _renderPeriodSessions(){\n    return _.map(this.props.timeperiod, (tp)=>{\n      return (<PeriodSessions {...this.props}\n        devive   = {this.state.device}\n        sessions = {this.state.sessions}\n        time     = {tp.time}\n        title    = {tp.title}\n        key      = {tp.title.toLowerCase()} />);\n    });\n  }\n\n  _onDeviceChange(device, size){\n    if (this.device !== device){\n      this.device = device;\n      ColumnsActions.changeDevice(device);\n    }\n    this.size   = size;\n  }\n\n  render(){\n    return (\n      <div className=\"weekly-prog\">\n        <TopBar\n          device={this.state.device}\n          print={this.props.print}\n        />\n        <DateNav />\n        <div id=\"sessions\" className=\"clearfix\">\n        {this._renderPeriodSessions()}\n        </div>\n      </div>\n    );\n  }\n}\n\nObject.assign(WeeklyProg.prototype, cssMixins);\nObject.assign(WeeklyProg.prototype, textMixins);\nObject.assign(WeeklyProg.prototype, widthsMixins);\n\nexport default WeeklyProg;\n\n\n"]}