{"version":3,"sources":["../../src/factories/date_manager.js"],"names":[],"mappings":";;AAAA,IAAM,CAAC,GAAS,OAAO,CAAC,QAAQ,CAAC;IAC3B,OAAO,GAAG,OAAO,CAAC,sBAAsB,CAAC;IACzC,YAAY,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAA;;AAE/C,SAAS,OAAO,CAAC,KAAK,EAAE,IAAI,EAAC;AAC3B,SAAO,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,UAAC,CAAC,EAAG;AACxB,WAAO,OAAO,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;GAC9B,CAAC,CAAA;CACH;;AAGD,SAAS,UAAU,CAAE,KAAK,EAAE,IAAI,EAAC;AAC/B,SAAO,AAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,GAAI,IAAI,GAAG,KAAK,CAAC;CAC9C;;AAGD,SAAS,UAAU,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,EAAC;AACpC,SAAO,CAAC,CAAC,GAAG,CAAC,KAAK,EAAE,UAAC,CAAC,EAAG;AACvB,QAAG,OAAO,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,EAAC;AACvB,OAAC,CAAC,IAAI,GAAG,IAAI,CAAC;KACf;AACD,WAAO,CAAC,CAAA;GACT,CAAC,CAAC;CACJ;;AAID,SAAS,WAAW,CAAC,OAAO,EAAE,EAAE,EAAC;;;;AAE/B,MAAI,KAAK,GAAG,AAAC,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,GAAI,EAAE,GAAG,EAAE,CAAC;AACtC,SAAO;AACL,WAAO,EAAC,iBAAC,IAAI,EAAE,IAAI,EAAG;AACpB,UAAI,IAAI,GAAG,IAAI,YAAY,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;;AAEtC,UAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;;AAEzB,UAAG,UAAU,CAAC,IAAI,CAAC,EAAC;AAClB,YAAI,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;AACtC,aAAK,GAAG,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;OACvB,MAAM;AACL,aAAK,CAAC,IAAI,CAAC,EAAC,IAAI,EAAC,IAAI,EAAE,IAAI,EAAC,IAAI,EAAC,CAAC,CAAA;OACnC;KACF;;AAEC,YAAQ,EAAC,oBAAW;wCAAP,IAAI;AAAJ,YAAI;;;AACf,UAAI,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;AACnC,aAAO,EAAE,CAAC,KAAK,QAAO,IAAI,CAAC,CAAA;KAC5B;;AAED,UAAM,EAAC;aAAI,KAAK;KAAA;;;;;;AAAA,MAMhB,UAAU,EAAC,sBAAW;yCAAP,IAAI;AAAJ,YAAI;;;AACnB,UAAI,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;AACtC,WAAK,GAAG,EAAE,CAAC,KAAK,QAAO,IAAI,CAAC,CAAA;KAC7B;GACF,CAAA;CACF;;AAED,MAAM,CAAC,OAAO,GAAG,WAAW,CAAC","file":"date_manager.js","sourcesContent":["const _       = require(\"lodash\")\n    , checker = require(\"../utils/day_checker\")\n    , SessionsFcty = require(\"./sessions_fcty\")\n\nfunction getDate(dates, date){\n  return _.find(dates, (d)=>{\n    return checker(d.date, date);\n  })\n}\n\n\nfunction checkDates (dates, date){\n  return (getDate(dates, date)) ? true : false;\n}\n\n\nfunction dateUpdate(dates, date, data){\n  return _.map(dates, (d)=>{\n    if(checker(d.date, date)){\n      d.data = data;\n    }\n    return d\n  });\n}\n\n\n\nfunction dateManager(groupBy, ds){\n  // console.log(\"length\",ds.length)\n  let dates = (_.isArray(ds)) ? ds : [];\n  return {\n    addDate:(date, data)=>{\n      let fcty = new SessionsFcty({}, data);\n\n      fcty.setTimeKey(groupBy);\n\n      if(checkDates(date)){\n        let fn = _.partial(dateUpdate, dates);\n        dates = fn(date, fcty)\n      } else {\n        dates.push({date:date, data:fcty})\n      }\n    }\n\n    , findDate:(...args)=>{\n        let fn = _.partial(getDate, dates);\n        return fn.apply(this, args)\n      }\n\n    , getAll:()=>dates\n\n    // , getRange:(st, fn)=>{\n    //   return _.filter(dates,\n    // }\n\n    , updateDate:(...args)=>{\n      let fn = _.partial(dateUpdate, dates);\n      dates = fn.apply(this, args)\n    }\n  }\n}\n\nmodule.exports = dateManager;"]}