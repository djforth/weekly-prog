{"version":3,"sources":["../../src/factories/sessions_fcty.js"],"names":[],"mappings":";;;;;;;;;;AACA,IAAM,IAAc,QAAQ,aAAR,CAApB;AACA,IAAM,cAAc,QAAQ,aAAR,CAApB;AACA,IAAM,YAAc,QAAQ,WAAR,CAApB;;IAEM,Y;;;;;;;;;;;kCAEU,I,EAAM,E,EAAI,E,EAAG;AACzB,UACI,EAAE,EAAE,QAAF,CAAW,EAAX,KACA,EAAE,QAAF,CAAW,EAAX,CADA,IAEA,EAAE,MAAF,CAAS,IAAT,CAFF,CADJ,EAKG;AACD,eAAO,KAAP;AACD;;AAED,aAAO,KAAK,QAAL,MAAmB,EAAnB,IACL,KAAK,QAAL,MAAmB,EADrB;AAED;;;gCAEW,M,EAAQ,E,EAAG;AACrB,UAAI,EAAE,OAAF,CAAU,MAAV,CAAJ,EAAuB,OAAO,EAAE,QAAF,CAAW,MAAX,EAAmB,EAAnB,CAAP;;AAEvB,aAAO,WAAW,EAAlB;AACD;;;2BAEM,G,EAAK,E,EAAG;AAAA;;AACb,UAAI,CAAC,KAAK,IAAV,EAAgB,OAAO,UAAU,MAAV,CAAiB,EAAjB,CAAP;;AAEhB,aAAO,KAAK,IAAL,CAAU,MAAV,CAAiB,UAAC,CAAD,EAAK;AAC3B,YAAI,CAAC,EAAE,GAAF,CAAM,SAAN,CAAL,EAAuB,OAAO,KAAP;;AAEvB,YAAI,UAAU,EAAE,GAAF,CAAM,SAAN,CAAd;AACA,YAAI,CAAC,QAAQ,GAAR,CAAY,GAAZ,CAAL,EAAuB,OAAO,KAAP;;AAEvB,eAAO,OAAK,WAAL,CAAiB,QAAQ,GAAR,CAAY,GAAZ,CAAjB,EAAmC,EAAnC,CAAP;AACD,OAPM,CAAP;AAQD;;;kCAEa,E,EAAI,E,EAAG;AAAA;;AACnB,UAAI,CAAC,KAAK,IAAV,EAAgB,OAAO,UAAU,MAAV,CAAiB,EAAjB,CAAP;;AAEhB,UAAI,CAAC,KAAK,GAAV,EAAe,OAAO,KAAK,IAAZ;;AAEf,aAAO,KAAK,IAAL,CAAU,MAAV,CAAiB,UAAC,CAAD,EAAK;AAC3B,YAAI,CAAC,EAAE,GAAF,CAAM,OAAK,GAAX,CAAL,EAAsB,OAAO,KAAP;;AAEtB,YAAI,OAAO,EAAE,GAAF,CAAM,OAAK,GAAX,CAAX;AACA,eAAO,OAAK,aAAL,CAAmB,IAAnB,EAAyB,EAAzB,EAA6B,EAA7B,CAAP;AACD,OALM,CAAP;AAMD;;;+BAEU,G,EAAI;AACb,WAAK,GAAL,GAAW,GAAX;AACD;;;2BAEK;AACJ,aAAQ,KAAK,IAAN,GAAc,KAAK,IAAL,CAAU,IAAxB,GAA+B,CAAtC;AACD;;;;EAtDwB,W;;AAyD3B,OAAO,OAAP,GAAiB,YAAjB","file":"sessions_fcty.js","sourcesContent":["\nconst _           = require('lodash/core');\nconst DataManager = require('datamanager');\nconst Immutable   = require('immutable');\n\nclass SessionsFcty extends DataManager {\n\n  checkInPeriod(time, st, fn){\n    if (\n        !(_.isNumber(st) &&\n          _.isNumber(fn) &&\n          _.isDate(time)\n          )\n      ){\n      return false;\n    }\n\n    return time.getHours() >= st &&\n      time.getHours() <= fn;\n  }\n\n  checkFilter(filter, id){\n    if (_.isArray(filter)) return _.includes(filter, id);\n\n    return filter === id;\n  }\n\n  filter(key, id){\n    if (!this.data) return Immutable.fromJS([]);\n\n    return this.data.filter((d)=>{\n      if (!d.has('filters')) return false;\n\n      let filters = d.get('filters');\n      if (!filters.has(key)) return false;\n\n      return this.checkFilter(filters.get(key), id);\n    });\n  }\n\n  getTimePeriod(st, fn){\n    if (!this.data) return Immutable.fromJS([]);\n\n    if (!this.key) return this.data;\n\n    return this.data.filter((d)=>{\n      if (!d.has(this.key)) return false;\n\n      let time = d.get(this.key);\n      return this.checkInPeriod(time, st, fn);\n    });\n  }\n\n  setTimeKey(key){\n    this.key = key;\n  }\n\n  size(){\n    return (this.data) ? this.data.size : 0;\n  }\n}\n\nmodule.exports = SessionsFcty;\n"]}