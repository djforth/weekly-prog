{"version":3,"sources":["../../src/actions/sessions_actions.js"],"names":[],"mappings":";;;;;;;AAKA,IAAM,qBAAqB,QAAQ,oCAAR,CAA3B;;;;;;;;;AASA,SAAS,UAAT,CAAoB,IAApB,EAAyB;AACvB,qBAAmB,UAAnB,CAA8B;AAC5B,UAAM,aADsB;AAE1B,UAAM;AAFoB,GAA9B;AAID;;;;;;;;;AASD,SAAS,cAAT,CAAwB,IAAxB,EAA6B;AAC3B,qBAAmB,cAAnB,CAAkC;AAChC,UAAM,iBAD0B;AAE9B,UAAM;AAFwB,GAAlC;AAID;;;;;;;;;AASD,SAAS,SAAT,CAAmB,QAAnB,EAA6B,IAA7B,EAAkC;AAChC,qBAAmB,SAAnB,CAA6B;AAC3B,UAAM,YADqB;AAEzB,cAAU,QAFe;AAGzB,UAAM;AAHmB,GAA7B;AAKD;;;;;;;;AAQD,SAAS,YAAT,CAAsB,QAAtB,EAA+B;AAC7B,qBAAmB,YAAnB,CAAgC;AAC9B,UAAM,eADwB;AAE3B,cAAU;AAFiB,GAAhC;AAID;;;;;;;AAOD,SAAS,WAAT,GAAsB;AACpB,qBAAmB,WAAnB,CAA+B;AAC7B,UAAM;AADuB,GAA/B;AAGD;;;;;;;AAOD,SAAS,eAAT,CAAyB,IAAzB,EAA8B;AAC5B,qBAAmB,eAAnB,CAAmC;AACjC,UAAM,eAD2B;AAE/B,UAAM;AAFyB,GAAnC;AAID;;;;;;;;AAQD,SAAS,aAAT,CAAuB,IAAvB,EAA4B;AAC1B,qBAAmB,aAAnB,CAAiC;AAC/B,UAAM,gBADyB;AAE7B,UAAM;AAFuB,GAAjC;AAID;;;;;;;;AAQD,SAAS,MAAT,CAAgB,GAAhB,EAAoB;AAClB,qBAAmB,MAAnB,CAA0B;AACxB,UAAM,SADkB;AAEtB,SAAK;AAFiB,GAA1B;AAID;;;;;;;;AAQD,SAAS,WAAT,CAAqB,EAArB,EAAwB;AACtB,qBAAmB,WAAnB,CAA+B;AAC7B,UAAM,cADuB;AAE3B,QAAI;AAFuB,GAA/B;AAID;;;;;;;;AAQD,SAAS,UAAT,CAAoB,OAApB,EAA4B;AAC1B,qBAAmB,UAAnB,CAA8B;AAC5B,UAAM,aADsB;AAE1B,aAAS;AAFiB,GAA9B;AAID;;AAED,OAAO,OAAP,GAAiB;AACf,cAAY,UADG;AAEb,kBAAgB,cAFH;AAGb,aAAW,SAHE;AAIb,gBAAc,YAJD;AAKb,eAAa,WALA;AAMb,mBAAiB,eANJ;AAOb,iBAAe,aAPF;AAQb,UAAQ,MARK;AASb,eAAa,WATA;AAUb,cAAY;AAVC,CAAjB","file":"sessions_actions.js","sourcesContent":[" /**\n * Weekly programme module.\n * @module  weekly-prog/actions/sessions_actions\n*/\n\nconst SessionsDispatcher = require('../dispatchers/sessions_dispatcher');\n\n/**\n  * This will change current date in sessions store\n  * @type {function}\n  * @param {date} date (required).\n  * @return {} returns nothing\n  */\n\nfunction changeDate(date){\n  SessionsDispatcher.changeDate({\n    type: 'CHANGE_DATE'\n    , date: date\n  });\n}\n\n/**\n  * This will change current date in sessions store from calendar\n  * @type {function}\n  * @param {date} date (required).\n  * @return {} returns nothing\n  */\n\nfunction calendarChange(date){\n  SessionsDispatcher.calendarChange({\n    type: 'CALENDAR_CHANGE'\n    , date: date\n  });\n}\n\n/**\n  * Will fetch data\n  * @type {function}\n  * @param {progress} function - tracks loading.\n  * @param {date} date, to add to query string.\n  * @return {} returns nothing\n  */\nfunction fetchData(progress, date){\n  SessionsDispatcher.fetchData({\n    type: 'FETCH_DATA'\n    , progress: progress\n    , date: date\n  });\n}\n\n/**\n  * Will fetch now/next data\n  * @type {function}\n  * @param {progress} function - tracks loading.\n  * @return {} returns nothing\n  */\nfunction fetchNowNext(progress){\n  SessionsDispatcher.fetchNowNext({\n    type: 'FETCH_NOWNEXT'\n    ,  progress: progress\n  });\n}\n\n/**\n  * Will get the following days data\n  * @type {function}\n  * @return {} returns nothing\n  */\nfunction getMoreDays(){\n  SessionsDispatcher.getMoreDays({\n    type: 'MORE_DAYS'\n  });\n}\n\n/**\n  * Will get the previous days data\n  * @type {function}\n  * @return {} returns nothing\n  */\nfunction getPreviousDays(date){\n  SessionsDispatcher.getPreviousDays({\n    type: 'PREVIOUS_DAYS'\n    , date: date\n  });\n}\n\n/**\n  * Will add prerender data to store\n  * @type {function}\n  * @param {data} array\n  * @return {} returns nothing\n  */\nfunction prerenderData(data){\n  SessionsDispatcher.prerenderData({\n    type: 'PRERENDER_DATA'\n    , data: data\n  });\n}\n\n/**\n  * Will set api\n  * @type {function}\n  * @param {string} url for api call\n  * @return {} returns nothing\n  */\nfunction setApi(url){\n  SessionsDispatcher.setApi({\n    type: 'SET_API'\n    , url: url\n  });\n}\n\n/**\n  * Will set facility in store (for now/next)\n  * @type {function}\n  * @param {number} id of facility\n  * @return {} returns nothing\n  */\nfunction setFacility(id){\n  SessionsDispatcher.setFacility({\n    type: 'SET_FACILITY'\n    , id: id\n  });\n}\n\n/**\n  * Will set groupby in store\n  * @type {function}\n  * @param {string} key\n  * @return {} returns nothing\n  */\nfunction setGroupby(groupBy){\n  SessionsDispatcher.setGroupBy({\n    type: 'SET_GROUPBY'\n    , groupBy: groupBy\n  });\n}\n\nmodule.exports = {\n  changeDate: changeDate\n  , calendarChange: calendarChange\n  , fetchData: fetchData\n  , fetchNowNext: fetchNowNext\n  , getMoreDays: getMoreDays\n  , getPreviousDays: getPreviousDays\n  , prerenderData: prerenderData\n  , setApi: setApi\n  , setFacility: setFacility\n  , setGroupby: setGroupby\n};\n"]}