{"version":3,"sources":["../../src/actions/sessions_actions.js"],"names":["changeDate","date","type","calendarChange","fetchData","progress","fetchNowNext","getMoreDays","getPreviousDays","prerenderData","data","setApi","url","setFacility","id","setGroupby","groupBy","setGroupBy"],"mappings":"okBA2Ie,CACbA,WA7HF,SAAoBC,IAApB,CAAyB,CACvB,8BAAmBD,UAAnB,CAA8B,CAC5BE,KAAM,aADsB,CAE1BD,KAAMA,IAFoB,CAA9B,CAID,CAuHc,CAEXE,eAhHJ,SAAwBF,IAAxB,CAA6B,CAC3B,8BAAmBE,cAAnB,CAAkC,CAChCD,KAAM,iBAD0B,CAE9BD,KAAMA,IAFwB,CAAlC,CAID,CAyGc,CAGXG,UAnGJ,SAAmBC,QAAnB,CAA6BJ,IAA7B,CAAkC,CAChC,8BAAmBG,SAAnB,CAA6B,CAC3BF,KAAM,YADqB,CAEzBG,SAAUA,QAFe,CAGzBJ,KAAMA,IAHmB,CAA7B,CAKD,CA0Fc,CAIXK,aAtFJ,SAAsBD,QAAtB,CAA+B,CAC7B,8BAAmBC,YAAnB,CAAgC,CAC9BJ,KAAM,eADwB,CAE3BG,SAAUA,QAFiB,CAAhC,CAID,CA6Ec,CAKXE,YA3EJ,UAAsB,CACpB,8BAAmBA,WAAnB,CAA+B,CAC7BL,KAAM,WADuB,CAA/B,CAGD,CAkEc,CAMXM,gBAjEJ,SAAyBP,IAAzB,CAA8B,CAC5B,8BAAmBO,eAAnB,CAAmC,CACjCN,KAAM,eAD2B,CAE/BD,KAAMA,IAFyB,CAAnC,CAID,CAsDc,CAOXQ,cArDJ,SAAuBC,IAAvB,CAA4B,CAC1B,8BAAmBD,aAAnB,CAAiC,CAC/BP,KAAM,gBADyB,CAE7BQ,KAAMA,IAFuB,CAAjC,CAID,CAyCc,CAQXC,OAzCJ,SAAgBC,GAAhB,CAAoB,CAClB,8BAAmBD,MAAnB,CAA0B,CACxBT,KAAM,SADkB,CAEtBU,IAAKA,GAFiB,CAA1B,CAID,CA4Bc,CASXC,YA7BJ,SAAqBC,EAArB,CAAwB,CACtB,8BAAmBD,WAAnB,CAA+B,CAC7BX,KAAM,cADuB,CAE3BY,GAAIA,EAFuB,CAA/B,CAID,CAec,CAUXC,WAjBJ,SAAoBC,OAApB,CAA4B,CAC1B,8BAAmBC,UAAnB,CAA8B,CAC5Bf,KAAM,aADsB,CAE1Bc,QAASA,OAFiB,CAA9B,CAID,CAEc,C","file":"sessions_actions.js","sourcesContent":[" /**\n * Weekly programme module.\n * @module  weekly-prog/actions/sessions_actions\n*/\n\n\nimport SessionsDispatcher from '../dispatchers/sessions_dispatcher';\n\n/**\n  * This will change current date in sessions store\n  * @type {function}\n  * @param {date} date (required).\n  * @return {} returns nothing\n  */\n\nfunction changeDate(date){\n  SessionsDispatcher.changeDate({\n    type: 'CHANGE_DATE'\n    , date: date\n  });\n}\n\n/**\n  * This will change current date in sessions store from calendar\n  * @type {function}\n  * @param {date} date (required).\n  * @return {} returns nothing\n  */\n\nfunction calendarChange(date){\n  SessionsDispatcher.calendarChange({\n    type: 'CALENDAR_CHANGE'\n    , date: date\n  });\n}\n\n/**\n  * Will fetch data\n  * @type {function}\n  * @param {progress} function - tracks loading.\n  * @param {date} date, to add to query string.\n  * @return {} returns nothing\n  */\nfunction fetchData(progress, date){\n  SessionsDispatcher.fetchData({\n    type: 'FETCH_DATA'\n    , progress: progress\n    , date: date\n  });\n}\n\n/**\n  * Will fetch now/next data\n  * @type {function}\n  * @param {progress} function - tracks loading.\n  * @return {} returns nothing\n  */\nfunction fetchNowNext(progress){\n  SessionsDispatcher.fetchNowNext({\n    type: 'FETCH_NOWNEXT'\n    ,  progress: progress\n  });\n}\n\n/**\n  * Will get the following days data\n  * @type {function}\n  * @return {} returns nothing\n  */\nfunction getMoreDays(){\n  SessionsDispatcher.getMoreDays({\n    type: 'MORE_DAYS'\n  });\n}\n\n/**\n  * Will get the previous days data\n  * @type {function}\n  * @return {} returns nothing\n  */\nfunction getPreviousDays(date){\n  SessionsDispatcher.getPreviousDays({\n    type: 'PREVIOUS_DAYS'\n    , date: date\n  });\n}\n\n/**\n  * Will add prerender data to store\n  * @type {function}\n  * @param {data} array\n  * @return {} returns nothing\n  */\nfunction prerenderData(data){\n  SessionsDispatcher.prerenderData({\n    type: 'PRERENDER_DATA'\n    , data: data\n  });\n}\n\n/**\n  * Will set api\n  * @type {function}\n  * @param {string} url for api call\n  * @return {} returns nothing\n  */\nfunction setApi(url){\n  SessionsDispatcher.setApi({\n    type: 'SET_API'\n    , url: url\n  });\n}\n\n/**\n  * Will set facility in store (for now/next)\n  * @type {function}\n  * @param {number} id of facility\n  * @return {} returns nothing\n  */\nfunction setFacility(id){\n  SessionsDispatcher.setFacility({\n    type: 'SET_FACILITY'\n    , id: id\n  });\n}\n\n/**\n  * Will set groupby in store\n  * @type {function}\n  * @param {string} key\n  * @return {} returns nothing\n  */\nfunction setGroupby(groupBy){\n  SessionsDispatcher.setGroupBy({\n    type: 'SET_GROUPBY'\n    , groupBy: groupBy\n  });\n}\n\nexport default {\n  changeDate: changeDate\n  , calendarChange: calendarChange\n  , fetchData: fetchData\n  , fetchNowNext: fetchNowNext\n  , getMoreDays: getMoreDays\n  , getPreviousDays: getPreviousDays\n  , prerenderData: prerenderData\n  , setApi: setApi\n  , setFacility: setFacility\n  , setGroupby: setGroupby\n};\n"]}