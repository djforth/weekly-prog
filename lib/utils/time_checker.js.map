{"version":3,"sources":["../../src/utils/time_checker.js"],"names":["_","Moment","includes","isnow","st","fn","now","isAfter","isSame","isBefore","ispast","item","col","times","pick","values","stk","fnk","get","isNow","isPast","setNowOrPast","past","fallback","isNull"],"mappings":";;AACA,OAAOA,CAAP,MAAc,aAAd;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,OAAOC,QAAP,MAAqB,iBAArB;AACCF,EAAEE,QAAF,GAAaA,QAAb;;AAED,SAASC,KAAT,CAAeC,EAAf,EAAmBC,EAAnB,EAAsB;AACpB,MAAIC,MAAML,QAAV;AACA,SACM,CAACK,IAAIC,OAAJ,CAAYH,EAAZ,KAAmBE,IAAIE,MAAJ,CAAWJ,EAAX,CAApB,MACCE,IAAIG,QAAJ,CAAaJ,EAAb,KAAoBC,IAAIE,MAAJ,CAAWH,EAAX,CADrB,CADN;AAID;;AAED,SAASK,MAAT,CAAgBL,EAAhB,EAAmB;AACjB,MAAIC,MAAML,QAAV;AACA,SAAOK,IAAIC,OAAJ,CAAYF,EAAZ,CAAP;AACD;;AAED,eAAe,UAASM,IAAT,EAAeC,GAAf,EAAmB;AAChC,MAAIC,QAAQb,EAAEc,IAAF,CAAOF,GAAP,EAAY,CAAC,KAAD,EAAQ,QAAR,CAAZ,CAAZ;;AADgC,iBAEfZ,EAAEe,MAAF,CAASF,KAAT,CAFe;AAAA;AAAA,MAE3BG,GAF2B;AAAA,MAEtBC,GAFsB;;AAAA,aAGf,CAACN,KAAKO,GAAL,CAASF,GAAT,CAAD,EAAgBL,KAAKO,GAAL,CAASD,GAAT,CAAhB,CAHe;AAAA,MAG3Bb,EAH2B;AAAA,MAGvBC,EAHuB;;;AAKhC,SAAO;AACLc,WAAO;AAAA,aAAIhB,MAAMC,EAAN,EAAUC,EAAV,CAAJ;AAAA,KADF;AAEHe,YAAQ;AAAA,aAAIV,OAAOL,EAAP,CAAJ;AAAA,KAFL;AAGHgB,kBAAc,sBAACf,GAAD,EAAiC;AAAA,UAA3BgB,IAA2B,uEAApB,EAAoB;AAAA,UAAhBC,QAAgB,uEAAL,EAAK;;AAC/C,UAAI,CAACvB,EAAEwB,MAAF,CAASlB,GAAT,CAAD,IAAkBH,MAAMC,EAAN,EAAUC,EAAV,CAAtB,EAAqC,OAAOC,GAAP;AACrC,UAAII,OAAOL,EAAP,CAAJ,EAAgB,OAAOiB,IAAP;AAChB,aAAOC,QAAP;AACD;AAPI,GAAP;AASD","file":"time_checker.js","sourcesContent":["\nimport _ from 'lodash/core';\nimport Moment from 'moment';\n\nimport includes from 'lodash/includes';\n _.includes = includes;\n\nfunction isnow(st, fn){\n  let now = Moment();\n  return (\n        (now.isAfter(st) || now.isSame(st)) &&\n        (now.isBefore(fn) || now.isSame(fn))\n        );\n}\n\nfunction ispast(fn){\n  let now = Moment();\n  return now.isAfter(fn);\n}\n\nexport default function(item, col){\n  let times = _.pick(col, ['key', 'concat']);\n  var [stk, fnk] = _.values(times);\n  var [st, fn]   = [item.get(stk), item.get(fnk)];\n\n  return {\n    isNow: ()=>isnow(st, fn)\n    , isPast: ()=>ispast(fn)\n    , setNowOrPast: (now, past = '', fallback = '')=>{\n      if (!_.isNull(now) && isnow(st, fn)) return now;\n      if (ispast(fn)) return past;\n      return fallback;\n    }\n  };\n};\n"]}