{"version":3,"sources":["../../src/utils/formatter.js"],"names":[],"mappings":";;AAAA,IAAM,SAAS,QAAQ,iBAAR,CAAT;IACA,IAAS,QAAQ,aAAR,CAAT;;AAEN,EAAE,OAAF,GAAY,QAAQ,gBAAR,CAAZ;;AAGA,SAAS,SAAT,CAAmB,GAAnB,EAAuB;AACrB,MAAG,EAAE,GAAF,CAAM,GAAN,EAAW,KAAX,CAAH,EAAsB,OAAO,IAAI,GAAJ,CAA7B;;AAEA,MAAG,EAAE,GAAF,CAAM,GAAN,EAAW,MAAX,KAAsB,IAAI,IAAJ,KAAa,UAAb,EAAwB;AAC/C,WAAO,gBAAP,CAD+C;GAAjD;;AAIA,SAAO,UAAP,CAPqB;CAAvB;;AAUA,SAAS,WAAT,CAAqB,IAArB,EAA2B,GAA3B,EAA+B;;;AAG7B,MAAG,CAAC,EAAE,MAAF,CAAS,IAAT,CAAD,EAAgB;;AAEjB,WAAO,IAAP,CAFiB;GAAnB;AAIA,MAAI,OAAO,OAAO,IAAP,EAAa,QAAb,CAAsB,UAAU,GAAV,CAAtB,CAAP,CAPyB;AAQ7B,MAAG,CAAC,KAAK,KAAL,CAAW,SAAX,CAAD,EAAwB,MAAS,IAAI,GAAJ,SAAW,IAApB,EAA3B;;AAR6B,SAUtB,IAAP;AAV6B,CAA/B;;AAaA,SAAS,QAAT,CAAkB,IAAlB,EAAuB;AACrB,MAAI,OAAO,IAAP,CADiB;AAErB,SAAO,UAAS,IAAT,EAAc;AACnB,QAAG,EAAE,QAAF,CAAW,IAAX,CAAH,EAAqB,OAAO,KAAK,GAAL,CAAS,IAAT,CAAP,CAArB;;AADmB,WAGZ,EAAE,GAAF,CAAM,IAAN,EAAY,UAAC,GAAD,EAAO;AACxB,UAAG,CAAC,EAAE,MAAF,CAAS,KAAK,GAAL,CAAS,GAAT,CAAT,CAAD,EAAyB;AAC1B,cAAS,mBAAc,KAAK,IAAL,EAAvB,EAD0B;OAA5B;AAGA,aAAO,KAAK,GAAL,CAAS,GAAT,CAAP,CAJwB;KAAP,CAAnB,CAHmB;GAAd,CAFc;CAAvB;;AAgBA,SAAS,YAAT,CAAsB,IAAtB,EAA4B,GAA5B,EAAgC;AAC9B,MAAI,SAAS,KAAK,CAAC,IAAI,GAAJ,EAAS,IAAI,MAAJ,CAAf,CAAT;;AAD0B,MAG1B,MAAM,EAAE,GAAF,CAAM,MAAN,EAAc,UAAC,CAAD,EAAK;AAC3B,QAAI,OAAO,YAAY,CAAZ,EAAe,GAAf,CAAP,CADuB;AAE3B,WAAO,IAAP,CAF2B;GAAL,CAApB,CAH0B;;AAQ9B,MAAG,QAAQ,cAAR,EAAuB;AACtB,sBAAgB,GAAhB,EADsB;GAA1B;;AAIA,SAAO,IAAI,IAAJ,OAAa,IAAI,KAAJ,MAAb,CAAP,CAZ8B;CAAhC;;AAiBA,OAAO,OAAP,GAAiB,UAAS,IAAT,EAAc;AAC7B,MAAI,QAAQ,SAAS,IAAT,CAAR,CADyB;;AAG7B,SAAO,UAAC,GAAD,EAAO;;AAEZ,WAAO,CAAC,CAAE,GAAF,CAAM,GAAN,EAAW,QAAX,CAAD,GAAyB,aAAa,KAAb,EAAoB,GAApB,CAAzB,GAAoD,MAAM,IAAI,GAAJ,CAA1D,CAFK;GAAP,CAHsB;CAAd","file":"formatter.js","sourcesContent":["const moment = require('moment-strftime')\n    , _      = require(\"lodash/core\");\n\n_.partial = require(\"lodash/partial\");\n\n\nfunction getFormat(col){\n  if(_.has(col, \"fmt\")) return col.fmt;\n\n  if(_.has(col, \"type\") && col.type === \"dateTime\"){\n    return \"%d/%m/%Y %H:%M\";\n  }\n\n  return \"%d/%m/%Y\";\n}\n\nfunction displayData(data, col){\n\n  // if(_.isBoolean(data) || data === \"true\") alert(`${col.key} ${data} ${typeof data}`)\n  if(!_.isDate(data)){\n\n    return data;\n  }\n  let time = moment(data).strftime(getFormat(col))\n  if(!time.match(/\\d*:\\d*/)) alert(`${col.key} ${time}`)\n  // if(col.key === 'start') alert(moment(data).strftime(getFormat(col)))\n  return time;//moment(data).strftime(getFormat(col));\n}\n\nfunction getValue(item){\n  var data = item\n  return function(keys){\n    if(_.isString(keys)) return data.get(keys);\n    // alert(keys)\n    return _.map(keys, (key)=>{\n      if(!_.isDate(data.get(key))){\n        alert(`${key} >>>>>> ${data.toJS()}`)\n      }\n      return data.get(key);\n    })\n  }\n\n}\n\n\nfunction concatValues(item, col){\n  let concat = item([col.key, col.concat]);\n  // alert(concat)\n  let val = _.map(concat, (d)=>{\n    let data = displayData(d, col)\n    return data;\n  });\n\n  if(val === \"true -  true\"){\n      alert(`Value: ${val}`)\n    }\n\n  return val.join(` ${col.split} `)\n}\n\n\n\nmodule.exports = function(item){\n  let value = getValue(item);\n\n  return (col)=>{\n\n    return (_.has(col, \"concat\")) ? concatValues(value, col) : value(col.key);\n  }\n}\n"]}