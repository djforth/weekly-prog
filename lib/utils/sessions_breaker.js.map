{"version":3,"sources":["../../src/utils/sessions_breaker.js"],"names":[],"mappings":";;AAAA,IAAM,CAAC,GAAe,OAAO,CAAC,QAAQ,CAAC;IACjC,aAAa,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC;;AAEhD,IAAI,OAAO,GAAS,OAAO,CAAC,eAAe,CAAC,CAAC;;AAG7C,SAAS,SAAS,CAAC,IAAI,EAAC;AACtB,SAAU,IAAI,CAAC,WAAW,EAAE,SAAI,IAAI,CAAC,QAAQ,EAAE,SAAI,IAAI,CAAC,OAAO,EAAE,CAAE;CACpE;;AAED,SAAS,aAAa,CAAC,QAAQ,EAAC;AAC9B,MAAI,YAAY,GAAG,CAAC,CAAC,MAAM,CAAC,QAAQ,EAAE,UAAC,CAAC;WAAI,CAAC,CAAC,OAAO;GAAA,CAAC,CAAC;AACvD,MAAI,IAAI,GAAO,CAAC,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,OAAO;;AAAC,AAE7C,MAAI,GAAG,GAAQ,SAAS,CAAC,IAAI,CAAC,CAAA;AAC9B,MAAI,MAAM,GAAK,EAAE,CAAC;AAClB,QAAM,CAAC,GAAG,CAAC,GAAG,EAAC,IAAI,EAAC,IAAI,EAAE,QAAQ,EAAC,EAAE,EAAC,CAAC;AACvC,GAAC,CAAC,OAAO,CAAC,YAAY,EAAE,UAAC,OAAO,EAAG;;AAEjC,QAAG,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,OAAO,CAAC,EAAC;AAChC,YAAM,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;KACnC,MAAM;AACL,UAAI,GAAG,OAAO,CAAC,OAAO,CAAC;AACvB,SAAG,GAAI,SAAS,CAAC,IAAI,CAAC,CAAC;AACvB,YAAM,CAAC,GAAG,CAAC,GAAG,EAAC,IAAI,EAAC,IAAI,EAAE,QAAQ,EAAC,CAAC,OAAO,CAAC,EAAC,CAAC;KAE/C;;AAED,WAAO,MAAM,CAAA;GACd,CAAC,CAAC;;AAEH,SAAO,MAAM,CAAA;CACd;;AAGD,SAAS,SAAS,CAAC,QAAQ,EAAE,GAAG,EAAC;AAC/B,SAAO,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,UAAC,CAAC,EAAG;;AAE1B,QAAI,IAAI,GAAO,IAAI,aAAa,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;;;AAAC,AAGzC,KAAC,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;;AAE9B,WAAO,CAAC,CAAC;GACV,CAAC,CAAA;CACH;;AAGD,MAAM,CAAC,OAAO,GAAG,UAAS,QAAQ,EAAE,OAAO,EAAC;;AAE1C,MAAI,IAAI,GAAG,SAAS,CAAC,QAAQ,EAAE,OAAO,CAAC;;AAAC,AAExC,SAAO,aAAa,CAAC,IAAI,CAAC,CAAC;CAC5B,CAAA","file":"sessions_breaker.js","sourcesContent":["const _             = require(\"lodash\")\n    , DateFormatter = require(\"date-formatter\");\n\nvar checker       = require(\"./day_checker\");\n\n\nfunction createKey(date){\n  return `${date.getFullYear()}-${date.getMonth()}-${date.getDate()}`\n}\n\nfunction groupSessions(sessions){\n  let new_sessions = _.sortBy(sessions, (s)=> s.groupBy);\n  let date     = _.first(new_sessions).groupBy;\n  // console.log(date)\n  let key      = createKey(date)\n  let groups   = {};\n  groups[key] = {date:date, sessions:[]};\n  _.forEach(new_sessions, (session)=>{\n\n    if(checker(date, session.groupBy)){\n      groups[key].sessions.push(session)\n    } else {\n      date = session.groupBy;\n      key  = createKey(date);\n      groups[key] = {date:date, sessions:[session]};\n\n    }\n\n    return groups\n  });\n\n  return groups\n}\n\n\nfunction makeDates(sessions, key){\n  return _.map(sessions, (s)=>{\n\n    let date     = new DateFormatter(s[key]);\n    // console.log(s, key)\n    // console.log(s[key], date.getDate())\n    s[\"groupBy\"] = date.getDate();\n\n    return s;\n  })\n}\n\n\nmodule.exports = function(sessions, groupBy){\n  // console.log(groupBy, sessions)\n  let list = makeDates(sessions, groupBy);\n  // console.log(list)\n  return groupSessions(list);\n}"]}