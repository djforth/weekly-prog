{"version":3,"sources":["../../src/utils/sessions_breaker.js"],"names":[],"mappings":";;AAAA,IAAM,SAAgB,QAAQ,iBAAR,CAAhB;;AAEN,IAAM,IAAW,QAAQ,aAAR,CAAX;IACA,WAAW,QAAQ,iBAAR,CAAX;;AAEN,IAAI,UAAgB,QAAQ,eAAR,CAAhB;;AAGJ,SAAS,SAAT,CAAmB,IAAnB,EAAwB;AACtB,SAAU,KAAK,WAAL,WAAsB,KAAK,QAAL,WAAmB,KAAK,OAAL,EAAnD,CADsB;CAAxB;;AAIA,SAAS,aAAT,CAAuB,QAAvB,EAAgC;AAC9B,MAAI,eAAe,EAAE,MAAF,CAAS,QAAT,EAAmB,UAAC,CAAD;WAAM,EAAE,OAAF;GAAN,CAAlC,CAD0B;AAE9B,MAAI,SAAW,EAAX,CAF0B;AAG9B,MAAI,MAAW,EAAE,KAAF,CAAQ,YAAR,CAAX,CAH0B;AAI9B,MAAG,EAAE,WAAF,CAAc,GAAd,KAAsB,EAAE,OAAF,CAAU,GAAV,CAAtB,EAAsC,OAAO,MAAP,CAAzC;AACA,MAAI,OAAW,EAAE,KAAF,CAAQ,YAAR,EAAsB,OAAtB;;AALe,MAO1B,MAAW,UAAU,IAAV,CAAX,CAP0B;;AAS9B,SAAO,GAAP,IAAc,EAAC,MAAK,IAAL,EAAW,UAAS,EAAT,EAA1B,CAT8B;AAU9B,IAAE,OAAF,CAAU,YAAV,EAAwB,UAAC,OAAD,EAAW;;AAEjC,QAAG,QAAQ,IAAR,EAAc,QAAQ,OAAR,CAAjB,EAAkC;AAChC,aAAO,GAAP,EAAY,QAAZ,CAAqB,IAArB,CAA0B,OAA1B,EADgC;KAAlC,MAEO;AACL,aAAO,QAAQ,OAAR,CADF;AAEL,YAAO,UAAU,IAAV,CAAP,CAFK;AAGL,aAAO,GAAP,IAAc,EAAC,MAAK,IAAL,EAAW,UAAS,CAAC,OAAD,CAAT,EAA1B,CAHK;KAFP;;AASA,WAAO,MAAP,CAXiC;GAAX,CAAxB,CAV8B;;AAwB9B,SAAO,MAAP,CAxB8B;CAAhC;;AA4BA,SAAS,SAAT,CAAmB,QAAnB,EAA6B,GAA7B,EAAiC;AAC/B,SAAO,EAAE,GAAF,CAAM,QAAN,EAAgB,UAAC,CAAD,EAAK;;AAE1B,QAAI,OAAW,OAAO,EAAE,GAAF,CAAP,CAAX,CAFsB;;AAI1B,MAAE,SAAF,IAAe,KAAK,MAAL,EAAf,CAJ0B;;AAM1B,WAAO,CAAP,CAN0B;GAAL,CAAvB,CAD+B;CAAjC;;AAWA,SAAS,MAAT,CAAgB,MAAhB,EAAwB,IAAxB,EAA6B;AAC3B,MAAI,MAAO,UAAU,KAAK,MAAL,EAAV,CAAP,CADuB;AAE3B,SAAO,GAAP,IAAc,EAAC,MAAK,KAAK,KAAL,GAAa,MAAb,EAAL,EAA4B,UAAS,EAAT,EAA3C,CAF2B;;AAI3B,SAAO,MAAP,CAJ2B;CAA7B;;AAOA,SAAS,YAAT,CAAsB,KAAtB,EAA4B;AAC1B,UAAQ,EAAE,GAAF,CAAM,KAAN,EAAa,UAAC,CAAD,EAAK;AACxB,WAAO,OAAO,CAAP,CAAP,CADwB;GAAL,CAArB,CAD0B;;AAK1B,SAAO,UAAS,IAAT,EAAc;AACnB,QAAI,QAAQ,KAAR,CADe;AAEnB,MAAE,OAAF,CAAU,KAAV,EAAiB,UAAC,CAAD,EAAK;AACpB,UAAG,EAAE,MAAF,CAAS,IAAT,EAAe,GAAf,CAAH,EAAuB;AACrB,gBAAQ,IAAR,CADqB;AAErB,eAAO,KAAP,CAFqB;OAAvB;KADe,CAAjB,CAFmB;;AASnB,WAAO,KAAP,CATmB;GAAd,CALmB;CAA5B;;AAmBA,SAAS,QAAT,CAAkB,MAAlB,EAA0B,KAA1B,EAAuC;MAAN,4DAAI,iBAAE;;AACrC,MAAI,QAAQ,aAAa,EAAE,GAAF,CAAM,EAAE,MAAF,CAAS,MAAT,CAAN,EAAwB,MAAxB,CAAb,CAAR,CADiC;AAErC,UAAQ,CAAC,CAAE,WAAF,CAAc,KAAd,CAAD,GAAyB,EAAE,KAAF,CAAQ,KAAR,CAAzB,GAA0C,KAA1C,CAF6B;AAGrC,UAAQ,OAAO,KAAP,CAAR,CAHqC;AAIrC,QAAM,MAAM,KAAN,GAAc,GAAd,CAAkB,GAAlB,EAAuB,GAAvB,CAAN,CAJqC;;AAMrC,KAAE;AACA,QAAG,CAAC,MAAM,KAAN,CAAD,EAAc;AACf,eAAS,OAAO,MAAP,EAAe,KAAf,CAAT,CADe;KAAjB;AAGA,UAAM,GAAN,CAAU,CAAV,EAAa,GAAb,EAJA;GAAF,QAKQ,MAAM,QAAN,CAAe,GAAf,CALR,EANqC;AAYrC,SAAO,MAAP,CAZqC;CAAvC;;AAgBA,OAAO,OAAP,GAAiB,UAAS,QAAT,EAAmB,OAAnB,EAA4B,EAA5B,EAA+B;;AAE9C,MAAI,OAAO,UAAU,QAAV,EAAoB,OAApB,CAAP,CAF0C;AAG9C,MAAI,SAAS,cAAc,IAAd,CAAT,CAH0C;AAI9C,SAAO,SAAS,MAAT,EAAiB,EAAjB,CAAP,CAJ8C;CAA/B","file":"sessions_breaker.js","sourcesContent":["const Moment        = require(\"moment-strftime\");\n\nconst _        = require(\"lodash/core\")\n    , includes = require(\"lodash/includes\")\n\nvar checker       = require(\"./day_checker\");\n\n\nfunction createKey(date){\n  return `${date.getFullYear()}-${date.getMonth()}-${date.getDate()}`\n}\n\nfunction groupSessions(sessions){\n  let new_sessions = _.sortBy(sessions, (s)=> s.groupBy);\n  let groups   = {};\n  let ses      = _.first(new_sessions);\n  if(_.isUndefined(ses) || _.isEmpty(ses)) return groups;\n  let date     = _.first(new_sessions).groupBy;\n  // console.log(date)\n  let key      = createKey(date)\n\n  groups[key] = {date:date, sessions:[]};\n  _.forEach(new_sessions, (session)=>{\n\n    if(checker(date, session.groupBy)){\n      groups[key].sessions.push(session)\n    } else {\n      date = session.groupBy;\n      key  = createKey(date);\n      groups[key] = {date:date, sessions:[session]};\n\n    }\n\n    return groups\n  });\n\n  return groups\n}\n\n\nfunction makeDates(sessions, key){\n  return _.map(sessions, (s)=>{\n\n    let date     = Moment(s[key]);\n\n    s[\"groupBy\"] = date.toDate();\n\n    return s;\n  });\n}\n\nfunction addDay(groups, date){\n  let key  = createKey(date.toDate());\n  groups[key] = {date:date.clone().toDate(), sessions:[]};\n\n  return groups;\n}\n\nfunction currentDates(dates){\n  dates = _.map(dates, (d)=>{\n    return Moment(d);\n  });\n\n  return function(test){\n    let check = false;\n    _.forEach(dates, (d)=>{\n      if(d.isSame(test, \"d\")){\n        check = true;\n        return false;\n      }\n    });\n\n    return check\n  }\n\n}\n\nfunction fillGaps(groups, start, end=7){\n  let dates = currentDates(_.map(_.values(groups), \"date\"));\n  start = (_.isUndefined(start)) ? _.first(dates) : start;\n  start = Moment(start);\n  end = start.clone().add(end, \"d\");\n\n  do{\n    if(!dates(start)){\n      groups = addDay(groups, start)\n    }\n    start.add(1, \"d\");\n  } while(start.isBefore(end));\n  return groups;\n}\n\n\nmodule.exports = function(sessions, groupBy, st){\n  // console.log(groupBy, sessions)\n  let list = makeDates(sessions, groupBy);\n  let groups = groupSessions(list);\n  return fillGaps(groups, st);\n}"]}