{"version":3,"sources":["../../src/utils/sessions_breaker.js"],"names":[],"mappings":";;AAAA,IAAM,SAAgB,QAAQ,iBAAR,CAAhB;;AAEN,IAAM,IAAW,QAAQ,aAAR,CAAX;;AAEN,IAAI,UAAgB,QAAQ,eAAR,CAAhB;;AAEJ,SAAS,SAAT,CAAmB,IAAnB,EAAwB;AACtB,SAAU,KAAK,WAAL,WAAsB,KAAK,QAAL,WAAmB,KAAK,OAAL,EAAnD,CADsB;CAAxB;;AAIA,SAAS,aAAT,CAAuB,QAAvB,EAAgC;AAC9B,MAAI,eAAe,EAAE,MAAF,CAAS,QAAT,EAAmB,UAAC,CAAD;WAAK,EAAE,OAAF;GAAL,CAAlC,CAD0B;AAE9B,MAAI,SAAW,EAAX,CAF0B;AAG9B,MAAI,MAAW,EAAE,KAAF,CAAQ,YAAR,CAAX,CAH0B;AAI9B,MAAI,EAAE,WAAF,CAAc,GAAd,KAAsB,EAAE,OAAF,CAAU,GAAV,CAAtB,EAAsC,OAAO,MAAP,CAA1C;AACA,MAAI,OAAW,EAAE,KAAF,CAAQ,YAAR,EAAsB,OAAtB,CALe;AAM9B,MAAI,MAAW,UAAU,IAAV,CAAX,CAN0B;;AAQ9B,SAAO,GAAP,IAAc,EAAC,MAAM,IAAN,EAAY,UAAU,EAAV,EAA3B,CAR8B;AAS9B,IAAE,OAAF,CAAU,YAAV,EAAwB,UAAC,OAAD,EAAW;AACjC,QAAI,QAAQ,IAAR,EAAc,QAAQ,OAAR,CAAlB,EAAmC;AACjC,aAAO,GAAP,EAAY,QAAZ,CAAqB,IAArB,CAA0B,OAA1B,EADiC;KAAnC,MAEO;AACL,aAAO,QAAQ,OAAR,CADF;AAEL,YAAO,UAAU,IAAV,CAAP,CAFK;AAGL,aAAO,GAAP,IAAc,EAAC,MAAM,IAAN,EAAY,UAAU,CAAC,OAAD,CAAV,EAA3B,CAHK;KAFP;;AAQA,WAAO,MAAP,CATiC;GAAX,CAAxB,CAT8B;;AAqB9B,SAAO,MAAP,CArB8B;CAAhC;;AAwBA,SAAS,SAAT,CAAmB,QAAnB,EAA6B,GAA7B,EAAiC;AAC/B,SAAO,EAAE,GAAF,CAAM,QAAN,EAAgB,UAAC,CAAD,EAAK;AAC1B,QAAI,OAAW,OAAO,EAAE,GAAF,CAAP,CAAX,CADsB;;AAG1B,MAAE,OAAF,GAAY,KAAK,MAAL,EAAZ,CAH0B;;AAK1B,WAAO,CAAP,CAL0B;GAAL,CAAvB,CAD+B;CAAjC;;AAUA,SAAS,MAAT,CAAgB,MAAhB,EAAwB,IAAxB,EAA6B;AAC3B,MAAI,MAAO,UAAU,KAAK,MAAL,EAAV,CAAP,CADuB;AAE3B,SAAO,GAAP,IAAc,EAAC,MAAM,KAAK,KAAL,GAAa,MAAb,EAAN,EAA6B,UAAU,EAAV,EAA5C,CAF2B;;AAI3B,SAAO,MAAP,CAJ2B;CAA7B;;AAOA,SAAS,YAAT,CAAsB,KAAtB,EAA4B;AAC1B,UAAQ,EAAE,GAAF,CAAM,KAAN,EAAa,UAAC,CAAD,EAAK;AACxB,WAAO,OAAO,CAAP,CAAP,CADwB;GAAL,CAArB,CAD0B;;AAK1B,SAAO,UAAS,IAAT,EAAc;AACnB,QAAI,QAAQ,KAAR,CADe;AAEnB,MAAE,OAAF,CAAU,KAAV,EAAiB,UAAC,CAAD,EAAK;AACpB,UAAI,EAAE,MAAF,CAAS,IAAT,EAAe,GAAf,CAAJ,EAAwB;AACtB,gBAAQ,IAAR,CADsB;AAEtB,eAAO,KAAP,CAFsB;OAAxB;KADe,CAAjB,CAFmB;;AASnB,WAAO,KAAP,CATmB;GAAd,CALmB;CAA5B;;AAkBA,SAAS,QAAT,CAAkB,MAAlB,EAA0B,KAA1B,EAAyC;MAAR,4DAAM,iBAAE;;AACvC,MAAI,QAAQ,aAAa,EAAE,GAAF,CAAM,EAAE,MAAF,CAAS,MAAT,CAAN,EAAwB,MAAxB,CAAb,CAAR,CADmC;AAEvC,UAAQ,CAAC,CAAE,WAAF,CAAc,KAAd,CAAD,GAAyB,EAAE,KAAF,CAAQ,KAAR,CAAzB,GAA0C,KAA1C,CAF+B;AAGvC,UAAQ,OAAO,KAAP,CAAR,CAHuC;AAIvC,QAAM,MAAM,KAAN,GAAc,GAAd,CAAkB,GAAlB,EAAuB,GAAvB,CAAN,CAJuC;;AAMvC,KAAG;AACD,QAAI,CAAC,MAAM,KAAN,CAAD,EAAc;AAChB,eAAS,OAAO,MAAP,EAAe,KAAf,CAAT,CADgB;KAAlB;AAGA,UAAM,GAAN,CAAU,CAAV,EAAa,GAAb,EAJC;GAAH,QAKS,MAAM,QAAN,CAAe,GAAf,CALT,EANuC;AAYvC,SAAO,MAAP,CAZuC;CAAzC;;AAeA,OAAO,OAAP,GAAiB,UAAS,QAAT,EAAmB,OAAnB,EAA4B,EAA5B,EAA+B;AAC9C,MAAI,OAAO,UAAU,QAAV,EAAoB,OAApB,CAAP,CAD0C;AAE9C,MAAI,SAAS,cAAc,IAAd,CAAT,CAF0C;AAG9C,SAAO,SAAS,MAAT,EAAiB,EAAjB,CAAP,CAH8C;CAA/B","file":"sessions_breaker.js","sourcesContent":["const Moment        = require('moment-strftime');\n\nconst _        = require('lodash/core');\n\nvar checker       = require('./day_checker');\n\nfunction createKey(date){\n  return `${date.getFullYear()}-${date.getMonth()}-${date.getDate()}`;\n}\n\nfunction groupSessions(sessions){\n  let new_sessions = _.sortBy(sessions, (s)=>s.groupBy);\n  let groups   = {};\n  let ses      = _.first(new_sessions);\n  if (_.isUndefined(ses) || _.isEmpty(ses)) return groups;\n  let date     = _.first(new_sessions).groupBy;\n  let key      = createKey(date);\n\n  groups[key] = {date: date, sessions: []};\n  _.forEach(new_sessions, (session)=>{\n    if (checker(date, session.groupBy)){\n      groups[key].sessions.push(session);\n    } else {\n      date = session.groupBy;\n      key  = createKey(date);\n      groups[key] = {date: date, sessions: [session]};\n    }\n\n    return groups;\n  });\n\n  return groups;\n}\n\nfunction makeDates(sessions, key){\n  return _.map(sessions, (s)=>{\n    let date     = Moment(s[key]);\n\n    s.groupBy = date.toDate();\n\n    return s;\n  });\n}\n\nfunction addDay(groups, date){\n  let key  = createKey(date.toDate());\n  groups[key] = {date: date.clone().toDate(), sessions: []};\n\n  return groups;\n}\n\nfunction currentDates(dates){\n  dates = _.map(dates, (d)=>{\n    return Moment(d);\n  });\n\n  return function(test){\n    let check = false;\n    _.forEach(dates, (d)=>{\n      if (d.isSame(test, 'd')){\n        check = true;\n        return false;\n      }\n    });\n\n    return check;\n  };\n}\n\nfunction fillGaps(groups, start, end = 7){\n  let dates = currentDates(_.map(_.values(groups), 'date'));\n  start = (_.isUndefined(start)) ? _.first(dates) : start;\n  start = Moment(start);\n  end = start.clone().add(end, 'd');\n\n  do {\n    if (!dates(start)){\n      groups = addDay(groups, start);\n    }\n    start.add(1, 'd');\n  } while (start.isBefore(end));\n  return groups;\n}\n\nmodule.exports = function(sessions, groupBy, st){\n  let list = makeDates(sessions, groupBy);\n  let groups = groupSessions(list);\n  return fillGaps(groups, st);\n};\n"]}