{"version":3,"sources":["../../src/utils/sessions_breaker.js"],"names":[],"mappings":";;AAAA,IAAM,CAAC,GAAe,OAAO,CAAC,QAAQ,CAAC;IACjC,MAAM,GAAU,OAAO,CAAC,iBAAiB,CAAC,CAAC;;AAEjD,IAAI,OAAO,GAAS,OAAO,CAAC,eAAe,CAAC,CAAC;;AAG7C,SAAS,SAAS,CAAC,IAAI,EAAC;AACtB,SAAU,IAAI,CAAC,WAAW,EAAE,SAAI,IAAI,CAAC,QAAQ,EAAE,SAAI,IAAI,CAAC,OAAO,EAAE,CAAE;CACpE;;AAED,SAAS,aAAa,CAAC,QAAQ,EAAC;AAC9B,MAAI,YAAY,GAAG,CAAC,CAAC,MAAM,CAAC,QAAQ,EAAE,UAAC,CAAC;WAAI,CAAC,CAAC,OAAO;GAAA,CAAC,CAAC;AACvD,MAAI,IAAI,GAAO,CAAC,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,OAAO;;AAAC,AAE7C,MAAI,GAAG,GAAQ,SAAS,CAAC,IAAI,CAAC,CAAA;AAC9B,MAAI,MAAM,GAAK,EAAE,CAAC;AAClB,QAAM,CAAC,GAAG,CAAC,GAAG,EAAC,IAAI,EAAC,IAAI,EAAE,QAAQ,EAAC,EAAE,EAAC,CAAC;AACvC,GAAC,CAAC,OAAO,CAAC,YAAY,EAAE,UAAC,OAAO,EAAG;;AAEjC,QAAG,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,OAAO,CAAC,EAAC;AAChC,YAAM,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;KACnC,MAAM;AACL,UAAI,GAAG,OAAO,CAAC,OAAO,CAAC;AACvB,SAAG,GAAI,SAAS,CAAC,IAAI,CAAC,CAAC;AACvB,YAAM,CAAC,GAAG,CAAC,GAAG,EAAC,IAAI,EAAC,IAAI,EAAE,QAAQ,EAAC,CAAC,OAAO,CAAC,EAAC,CAAC;KAE/C;;AAED,WAAO,MAAM,CAAA;GACd,CAAC,CAAC;;AAEH,SAAO,MAAM,CAAA;CACd;;AAGD,SAAS,SAAS,CAAC,QAAQ,EAAE,GAAG,EAAC;AAC/B,SAAO,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,UAAC,CAAC,EAAG;;AAE1B,QAAI,IAAI,GAAO,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;;AAE9B,KAAC,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;;AAE7B,WAAO,CAAC,CAAC;GACV,CAAC,CAAC;CACJ;;AAED,SAAS,MAAM,CAAC,MAAM,EAAE,IAAI,EAAC;AAC3B,MAAI,GAAG,GAAI,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;AACpC,QAAM,CAAC,GAAG,CAAC,GAAG,EAAC,IAAI,EAAC,IAAI,CAAC,KAAK,EAAE,CAAC,MAAM,EAAE,EAAE,QAAQ,EAAC,EAAE,EAAC,CAAC;;AAExD,SAAO,MAAM,CAAC;CACf;;AAED,SAAS,YAAY,CAAC,KAAK,EAAC;AAC1B,OAAK,GAAG,CAAC,CAAC,GAAG,CAAC,KAAK,EAAE,UAAC,CAAC,EAAG;AACxB,WAAO,MAAM,CAAC,CAAC,CAAC,CAAC;GAClB,CAAC,CAAC;;AAEH,SAAO,UAAS,IAAI,EAAC;AACnB,QAAI,KAAK,GAAG,KAAK,CAAC;AAClB,KAAC,CAAC,OAAO,CAAC,KAAK,EAAE,UAAC,CAAC,EAAG;AACpB,UAAG,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,EAAC;AACrB,aAAK,GAAG,IAAI,CAAC;AACb,eAAO,KAAK,CAAC;OACd;KACF,CAAC,CAAC;;AAEH,WAAO,KAAK,CAAA;GACb,CAAA;CAEF;;AAED,SAAS,QAAQ,CAAC,MAAM,EAAE,KAAK,EAAQ;MAAN,GAAG,yDAAC,CAAC;;AACpC,MAAI,KAAK,GAAG,YAAY,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC;AAC5D,OAAK,GAAG,AAAC,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,GAAI,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;AACxD,OAAK,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;AACtB,KAAG,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;;AAElC,KAAE;AACA,QAAG,CAAC,KAAK,CAAC,KAAK,CAAC,EAAC;AACf,YAAM,GAAG,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;KAC/B;AACD,SAAK,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;GACnB,QAAO,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;AAC7B,SAAO,MAAM,CAAC;CACf;;AAGD,MAAM,CAAC,OAAO,GAAG,UAAS,QAAQ,EAAE,OAAO,EAAE,EAAE,EAAC;;AAE9C,MAAI,IAAI,GAAG,SAAS,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;AACxC,MAAI,MAAM,GAAG,aAAa,CAAC,IAAI,CAAC,CAAC;AACjC,SAAO,QAAQ,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;CAC7B,CAAA","file":"sessions_breaker.js","sourcesContent":["const _             = require(\"lodash\")\n    , Moment        = require(\"moment-strftime\");\n\nvar checker       = require(\"./day_checker\");\n\n\nfunction createKey(date){\n  return `${date.getFullYear()}-${date.getMonth()}-${date.getDate()}`\n}\n\nfunction groupSessions(sessions){\n  let new_sessions = _.sortBy(sessions, (s)=> s.groupBy);\n  let date     = _.first(new_sessions).groupBy;\n  // console.log(date)\n  let key      = createKey(date)\n  let groups   = {};\n  groups[key] = {date:date, sessions:[]};\n  _.forEach(new_sessions, (session)=>{\n\n    if(checker(date, session.groupBy)){\n      groups[key].sessions.push(session)\n    } else {\n      date = session.groupBy;\n      key  = createKey(date);\n      groups[key] = {date:date, sessions:[session]};\n\n    }\n\n    return groups\n  });\n\n  return groups\n}\n\n\nfunction makeDates(sessions, key){\n  return _.map(sessions, (s)=>{\n\n    let date     = Moment(s[key]);\n\n    s[\"groupBy\"] = date.toDate();\n\n    return s;\n  });\n}\n\nfunction addDay(groups, date){\n  let key  = createKey(date.toDate());\n  groups[key] = {date:date.clone().toDate(), sessions:[]};\n\n  return groups;\n}\n\nfunction currentDates(dates){\n  dates = _.map(dates, (d)=>{\n    return Moment(d);\n  });\n\n  return function(test){\n    let check = false;\n    _.forEach(dates, (d)=>{\n      if(d.isSame(test, \"d\")){\n        check = true;\n        return false;\n      }\n    });\n\n    return check\n  }\n\n}\n\nfunction fillGaps(groups, start, end=7){\n  let dates = currentDates(_.pluck(_.values(groups), \"date\"));\n  start = (_.isUndefined(start)) ? _.first(dates) : start;\n  start = Moment(start);\n  end = start.clone().add(end, \"d\");\n\n  do{\n    if(!dates(start)){\n      groups = addDay(groups, start)\n    }\n    start.add(1, \"d\");\n  } while(start.isBefore(end));\n  return groups;\n}\n\n\nmodule.exports = function(sessions, groupBy, st){\n  // console.log(groupBy, sessions)\n  let list = makeDates(sessions, groupBy);\n  let groups = groupSessions(list);\n  return fillGaps(groups, st);\n}"]}