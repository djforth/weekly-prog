{"version":3,"sources":["../../src/utils/ajax_manager.js"],"names":[],"mappings":";;AAAC,IAAM,OAAQ,QAAQ,iBAAR,CAAR;IACA,IAAQ,QAAQ,QAAR,CAAR;IACD,gBAAgB,QAAQ,yBAAR,CAAhB;;AAEN,IAAM,cAAc,IAAI,IAAJ,EAAd;;AAEN,IAAI,kBAAkB,EAAlB;;AAEJ,SAAS,MAAT,CAAgB,GAAhB,EAAqB,IAArB,EAA0B;AACxB,MAAG,CAAC,EAAE,MAAF,CAAS,IAAT,CAAD,EAAiB,OAAO,GAAP,CAApB;;AAEA,MAAI,UAAU,IAAI,aAAJ,CAAkB,IAAlB,CAAV,CAHoB;AAIxB,MAAI,OAAO,QAAQ,UAAR,CAAmB,gBAAnB,CAAP,CAJoB;AAKxB,SAAO,IAAI,OAAJ,CAAY,OAAZ,EAAqB,IAArB,CAAP,CALwB;CAA1B;;AASA,OAAO,OAAP,GAAiB,UAAS,GAAT,EAAa;AAC5B,MAAG,CAAC,GAAD,EAAK;AACN,UAAM,IAAI,KAAJ,CAAU,kBAAV,CAAN,CADM;GAAR;;AAIA,MAAI,oBAAJ;MAAc,gBAAd,CAL4B;;AAO5B,SAAO;AACL,iBAAY,qBAAC,CAAD,EAAK;AACf,iBAAW,CAAC,CAAE,UAAF,CAAa,CAAb,CAAD,GAAoB,CAApB,GAAwB,IAAxB,CADI;AAEf,aAAO,QAAP,CAFe;KAAL;;AAKV,cAAS,kBAAC,CAAD,EAAK;AACd,aAAO,CAAC,CAAE,MAAF,CAAS,CAAT,CAAD,GAAgB,CAAhB,GAAoB,IAApB,CADO;AAEd,aAAO,IAAP,CAFc;KAAL;;AAKT,WAAM,iBAAI;AACV,UAAI,MAAM,OAAO,GAAP,EAAY,IAAZ,CAAN,CADM;AAEV,UAAG,EAAE,QAAF,CAAW,eAAX,EAA4B,GAA5B,CAAH,EAAqC,OAAO,IAAP,CAArC;AACA,sBAAgB,IAAhB,CAAqB,GAArB,EAHU;AAIV,kBAAY,MAAZ,CAAmB,OAAO,GAAP,EAAY,IAAZ,CAAnB,EAJU;;AAMV,aAAO,YAAY,KAAZ,CAAkB,QAAlB,EACJ,IADI,CACC,UAAC,IAAD,EAAQ;AACZ,0BAAkB,EAAE,MAAF,CAAS,eAAT,EAA0B,UAAC,EAAD;iBAAM,OAAO,GAAP;SAAN,CAA5C;;AADY,eAGL,IAAP,CAHY;OAAR,CADD,CAMJ,KANI,CAME,UAAC,GAAD,EAAO;AACd,cAAM,IAAI,KAAJ,CAAU,GAAV,CAAN,CADc;OAAP,CANT,CANU;KAAJ;;GAXV,CAP4B;CAAb","file":"ajax_manager.js","sourcesContent":[" const Ajax  = require(\"ajax-es6-module\")\n    ,  _     = require(\"lodash\")\n    , DateFormatter = require(\"@djforth/date-formatter\");\n\nconst ajaxManager = new Ajax();\n\nlet currentRequests = [];\n\nfunction setApi(api, date){\n  if(!_.isDate(date)) return api;\n\n  let dateFmt = new DateFormatter(date);\n  let path = dateFmt.formatDate(\"/%Y/%m/%d.json\");\n  return api.replace(/.json/, path)\n}\n\n\nmodule.exports = function(api){\n  if(!api){\n    throw new Error(\"api url required\");\n  }\n\n  let progress, date;\n\n  return {\n    addProgress:(p)=>{\n      progress = (_.isFunction(p)) ? p : null;\n      return progress;\n    }\n\n    , addQuery:(d)=>{\n      date = (_.isDate(d)) ? d : null;\n      return date;\n    }\n\n    , fetch:()=>{\n      let url = setApi(api, date);\n      if(_.includes(currentRequests, url)) return null;\n      currentRequests.push(url)\n      ajaxManager.addUrl(setApi(api, date));\n\n      return ajaxManager.fetch(progress)\n        .then((data)=>{\n          currentRequests = _.reject(currentRequests, (cr)=>cr === url);\n          // console.log(currentRequests)\n          return data;\n        })\n        .catch((err)=>{\n        throw new Error(err);\n      });\n    }\n\n\n\n\n  }\n\n\n}\n"]}