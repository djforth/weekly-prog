{"version":3,"sources":["../../src/utils/ajax_manager.js"],"names":[],"mappings":";;AAAA,IAAM,OAAQ,QAAQ,iBAAR,CAAd;IACM,SAAS,QAAQ,iBAAR,CADf;;AAGA,IAAM,IAAI,QAAQ,aAAR,CAAV;IACO,WAAW,QAAQ,iBAAR,CADlB;IAEO,SAAW,QAAQ,eAAR,CAFlB;;AAIA,IAAM,cAAc,IAAI,IAAJ,EAApB;;AAEA,IAAI,kBAAkB,EAAtB;;AAEA,SAAS,MAAT,CAAgB,GAAhB,EAAqB,IAArB,EAA0B;AACxB,MAAI,CAAC,EAAE,MAAF,CAAS,IAAT,CAAL,EAAqB,OAAO,GAAP;;AAErB,MAAI,UAAU,OAAO,IAAP,CAAd;AACA,MAAI,OAAO,QAAQ,QAAR,CAAiB,kBAAjB,CAAX;AACA,SAAO,IAAI,OAAJ,CAAY,OAAZ,EAAqB,IAArB,CAAP;AACD;;AAED,OAAO,OAAP,GAAiB,UAAS,GAAT,EAAa;AAC5B,MAAI,CAAC,GAAL,EAAS;AACP,UAAM,IAAI,KAAJ,CAAU,kBAAV,CAAN;AACD;;AAED,MAAI,iBAAJ;MAAc,aAAd;;AAEA,SAAO;AACL,iBAAa,qBAAC,CAAD,EAAK;AAChB,iBAAY,EAAE,UAAF,CAAa,CAAb,CAAD,GAAoB,CAApB,GAAwB,IAAnC;AACA,aAAO,QAAP;AACD,KAJI;;AAMH,cAAU,kBAAC,CAAD,EAAK;AACf,aAAQ,EAAE,MAAF,CAAS,CAAT,CAAD,GAAgB,CAAhB,GAAoB,IAA3B;AACA,aAAO,IAAP;AACD,KATI;;AAWH,WAAO,iBAAI;AACX,UAAI,MAAM,OAAO,GAAP,EAAY,IAAZ,CAAV;AACA,UAAI,SAAS,eAAT,EAA0B,GAA1B,CAAJ,EAAoC,OAAO,IAAP;AACpC,sBAAgB,IAAhB,CAAqB,GAArB;AACA,kBAAY,MAAZ,CAAmB,OAAO,GAAP,EAAY,IAAZ,CAAnB;;AAEA,aAAO,YAAY,KAAZ,CAAkB,QAAlB,EACJ,IADI,CACC,UAAC,IAAD,EAAQ;AACZ,0BAAkB,OAAO,eAAP,EAAwB,UAAC,EAAD;AAAA,iBAAM,OAAO,GAAb;AAAA,SAAxB,CAAlB;;AAEA,eAAO,IAAP;AACD,OALI,EAMJ,KANI,CAME,UAAC,GAAD,EAAO;AACZ,cAAM,IAAI,KAAJ,CAAU,GAAV,CAAN;AACD,OARI,CAAP;AASD;AA1BI,GAAP;AA4BD,CAnCD","file":"ajax_manager.js","sourcesContent":["const Ajax  = require('ajax-es6-module')\n    , Moment = require('moment-strftime');\n\nconst _ = require('lodash/core')\n     , includes = require('lodash/includes')\n     , reject   = require('lodash/reject');\n\nconst ajaxManager = new Ajax();\n\nlet currentRequests = [];\n\nfunction setApi(api, date){\n  if (!_.isDate(date)) return api;\n\n  let dateFmt = Moment(date);\n  let path = dateFmt.strftime('/%Y/%m/%d[.json]');\n  return api.replace(/.json/, path);\n}\n\nmodule.exports = function(api){\n  if (!api){\n    throw new Error('api url required');\n  }\n\n  let progress, date;\n\n  return {\n    addProgress: (p)=>{\n      progress = (_.isFunction(p)) ? p : null;\n      return progress;\n    }\n\n    , addQuery: (d)=>{\n      date = (_.isDate(d)) ? d : null;\n      return date;\n    }\n\n    , fetch: ()=>{\n      let url = setApi(api, date);\n      if (includes(currentRequests, url)) return null;\n      currentRequests.push(url);\n      ajaxManager.addUrl(setApi(api, date));\n\n      return ajaxManager.fetch(progress)\n        .then((data)=>{\n          currentRequests = reject(currentRequests, (cr)=>cr === url);\n          // console.log(currentRequests)\n          return data;\n        })\n        .catch((err)=>{\n          throw new Error(err);\n        });\n    }\n  };\n};\n"]}