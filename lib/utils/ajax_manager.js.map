{"version":3,"sources":["../../src/utils/ajax_manager.js"],"names":[],"mappings":";;AAAA,IAAM,OAAQ,QAAQ,iBAAR,CAAR;IACA,SAAS,QAAQ,iBAAR,CAAT;;AAEN,IAAM,IAAI,QAAQ,aAAR,CAAJ;IACC,WAAW,QAAQ,iBAAR,CAAX;IACA,SAAW,QAAQ,eAAR,CAAX;;AAEP,IAAM,cAAc,IAAI,IAAJ,EAAd;;AAEN,IAAI,kBAAkB,EAAlB;;AAEJ,SAAS,MAAT,CAAgB,GAAhB,EAAqB,IAArB,EAA0B;AACxB,MAAI,CAAC,EAAE,MAAF,CAAS,IAAT,CAAD,EAAiB,OAAO,GAAP,CAArB;;AAEA,MAAI,UAAU,OAAO,IAAP,CAAV,CAHoB;AAIxB,MAAI,OAAO,QAAQ,QAAR,CAAiB,kBAAjB,CAAP,CAJoB;AAKxB,SAAO,IAAI,OAAJ,CAAY,OAAZ,EAAqB,IAArB,CAAP,CALwB;CAA1B;;AAQA,OAAO,OAAP,GAAiB,UAAS,GAAT,EAAa;AAC5B,MAAI,CAAC,GAAD,EAAK;AACP,UAAM,IAAI,KAAJ,CAAU,kBAAV,CAAN,CADO;GAAT;;AAIA,MAAI,iBAAJ;MAAc,aAAd,CAL4B;;AAO5B,SAAO;AACL,iBAAa,qBAAC,CAAD,EAAK;AAChB,iBAAW,CAAC,CAAE,UAAF,CAAa,CAAb,CAAD,GAAoB,CAApB,GAAwB,IAAxB,CADK;AAEhB,aAAO,QAAP,CAFgB;KAAL;;AAKX,cAAU,kBAAC,CAAD,EAAK;AACf,aAAO,CAAC,CAAE,MAAF,CAAS,CAAT,CAAD,GAAgB,CAAhB,GAAoB,IAApB,CADQ;AAEf,aAAO,IAAP,CAFe;KAAL;;AAKV,WAAO,iBAAI;AACX,UAAI,MAAM,OAAO,GAAP,EAAY,IAAZ,CAAN,CADO;AAEX,UAAI,SAAS,eAAT,EAA0B,GAA1B,CAAJ,EAAoC,OAAO,IAAP,CAApC;AACA,sBAAgB,IAAhB,CAAqB,GAArB,EAHW;AAIX,kBAAY,MAAZ,CAAmB,OAAO,GAAP,EAAY,IAAZ,CAAnB,EAJW;;AAMX,aAAO,YAAY,KAAZ,CAAkB,QAAlB,EACJ,IADI,CACC,UAAC,IAAD,EAAQ;AACZ,0BAAkB,OAAO,eAAP,EAAwB,UAAC,EAAD;iBAAM,OAAO,GAAP;SAAN,CAA1C;;AADY,eAGL,IAAP,CAHY;OAAR,CADD,CAMJ,KANI,CAME,UAAC,GAAD,EAAO;AACZ,cAAM,IAAI,KAAJ,CAAU,GAAV,CAAN,CADY;OAAP,CANT,CANW;KAAJ;GAXX,CAP4B;CAAb","file":"ajax_manager.js","sourcesContent":["const Ajax  = require('ajax-es6-module')\n    , Moment = require('moment-strftime');\n\nconst _ = require('lodash/core')\n     , includes = require('lodash/includes')\n     , reject   = require('lodash/reject');\n\nconst ajaxManager = new Ajax();\n\nlet currentRequests = [];\n\nfunction setApi(api, date){\n  if (!_.isDate(date)) return api;\n\n  let dateFmt = Moment(date);\n  let path = dateFmt.strftime('/%Y/%m/%d[.json]');\n  return api.replace(/.json/, path);\n}\n\nmodule.exports = function(api){\n  if (!api){\n    throw new Error('api url required');\n  }\n\n  let progress, date;\n\n  return {\n    addProgress: (p)=>{\n      progress = (_.isFunction(p)) ? p : null;\n      return progress;\n    }\n\n    , addQuery: (d)=>{\n      date = (_.isDate(d)) ? d : null;\n      return date;\n    }\n\n    , fetch: ()=>{\n      let url = setApi(api, date);\n      if (includes(currentRequests, url)) return null;\n      currentRequests.push(url);\n      ajaxManager.addUrl(setApi(api, date));\n\n      return ajaxManager.fetch(progress)\n        .then((data)=>{\n          currentRequests = reject(currentRequests, (cr)=>cr === url);\n          // console.log(currentRequests)\n          return data;\n        })\n        .catch((err)=>{\n          throw new Error(err);\n        });\n    }\n  };\n};\n"]}