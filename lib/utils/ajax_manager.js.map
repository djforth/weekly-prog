{"version":3,"sources":["../../src/utils/ajax_manager.js"],"names":[],"mappings":";;AAAC,IAAM,IAAI,GAAI,OAAO,CAAC,iBAAiB,CAAC;IAClC,CAAC,GAAO,OAAO,CAAC,QAAQ,CAAC;IAC1B,aAAa,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC;;AAEhD,IAAM,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;;AAE/B,IAAI,eAAe,GAAG,EAAE,CAAC;;AAEzB,SAAS,MAAM,CAAC,GAAG,EAAE,IAAI,EAAC;AACxB,MAAG,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,OAAO,GAAG,CAAC;;AAE/B,MAAI,OAAO,GAAG,IAAI,aAAa,CAAC,IAAI,CAAC,CAAC;AACtC,MAAI,IAAI,GAAG,OAAO,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC;AAChD,SAAO,GAAG,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,CAAA;CAClC;;AAGD,MAAM,CAAC,OAAO,GAAG,UAAS,GAAG,EAAC;AAC5B,MAAG,CAAC,GAAG,EAAC;AACN,UAAM,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC;GACrC;;AAED,MAAI,QAAQ,YAAA;MAAE,IAAI,YAAA,CAAC;;AAEnB,SAAO;AACL,eAAW,EAAC,qBAAC,CAAC,EAAG;AACf,cAAQ,GAAG,AAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,GAAI,CAAC,GAAG,IAAI,CAAC;AACxC,aAAO,QAAQ,CAAC;KACjB;;AAEC,YAAQ,EAAC,kBAAC,CAAC,EAAG;AACd,UAAI,GAAG,AAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,GAAI,CAAC,GAAG,IAAI,CAAC;AAChC,aAAO,IAAI,CAAC;KACb;;AAEC,SAAK,EAAC,iBAAI;AACV,UAAI,GAAG,GAAG,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;AAC5B,UAAG,CAAC,CAAC,QAAQ,CAAC,eAAe,EAAE,GAAG,CAAC,EAAE,OAAO,IAAI,CAAC;AACjD,qBAAe,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;AACzB,iBAAW,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;;AAEtC,aAAO,WAAW,CAAC,KAAK,CAAC,QAAQ,CAAC,CAC/B,IAAI,CAAC,UAAC,IAAI,EAAG;AACZ,uBAAe,GAAG,CAAC,CAAC,MAAM,CAAC,eAAe,EAAE,UAAC,EAAE;iBAAG,EAAE,KAAK,GAAG;SAAA,CAAC;;AAAC,AAE9D,eAAO,IAAI,CAAC;OACb,CAAC,CACD,KAAK,CAAC,UAAC,GAAG,EAAG;AACd,cAAM,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;OACtB,CAAC,CAAC;KACJ;;GAKF,CAAA;CAGF,CAAA","file":"ajax_manager.js","sourcesContent":[" const Ajax  = require(\"ajax-es6-module\")\n    ,  _     = require(\"lodash\")\n    , DateFormatter = require(\"date-formatter\");\n\nconst ajaxManager = new Ajax();\n\nlet currentRequests = [];\n\nfunction setApi(api, date){\n  if(!_.isDate(date)) return api;\n\n  let dateFmt = new DateFormatter(date);\n  let path = dateFmt.formatDate(\"/%Y/%m/%d.json\");\n  return api.replace(/.json/, path)\n}\n\n\nmodule.exports = function(api){\n  if(!api){\n    throw new Error(\"api url required\");\n  }\n\n  let progress, date;\n\n  return {\n    addProgress:(p)=>{\n      progress = (_.isFunction(p)) ? p : null;\n      return progress;\n    }\n\n    , addQuery:(d)=>{\n      date = (_.isDate(d)) ? d : null;\n      return date;\n    }\n\n    , fetch:()=>{\n      let url = setApi(api, date);\n      if(_.includes(currentRequests, url)) return null;\n      currentRequests.push(url)\n      ajaxManager.addUrl(setApi(api, date));\n\n      return ajaxManager.fetch(progress)\n        .then((data)=>{\n          currentRequests = _.reject(currentRequests, (cr)=>cr === url);\n          // console.log(currentRequests)\n          return data;\n        })\n        .catch((err)=>{\n        throw new Error(err);\n      });\n    }\n\n\n\n\n  }\n\n\n}\n"]}